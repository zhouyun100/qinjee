<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qinjee.masterdata.dao.UserArchivePostRelationDao">
  <resultMap id="BaseResultMap" type="com.qinjee.masterdata.model.entity.UserArchivePostRelation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="archive_id" jdbcType="INTEGER" property="archiveId" />
    <result column="post_id" jdbcType="INTEGER" property="postId" />
    <result column="position_level_id" jdbcType="INTEGER" property="positionLevelId" />
    <result column="position_grade_id" jdbcType="INTEGER" property="positionGradeId" />
    <result column="employment_begin_date" jdbcType="DATE" property="employmentBeginDate" />
    <result column="employment_end_date" jdbcType="DATE" property="employmentEndDate" />
    <result column="employment_type" jdbcType="VARCHAR" property="employmentType" />
    <result column="appoint_dismissal_reason" jdbcType="VARCHAR" property="appointDismissalReason" />
    <result column="supervisor_id" jdbcType="INTEGER" property="supervisorId" />
    <result column="operator_id" jdbcType="INTEGER" property="operatorId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_delete" jdbcType="SMALLINT" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, archive_id, post_id, position_level_id, position_grade_id, employment_begin_date,
    employment_end_date, employment_type, appoint_dismissal_reason, supervisor_id, operator_id,
    create_time, update_time, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user_archive_post_relation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user_archive_post_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.qinjee.masterdata.model.entity.UserArchivePostRelation" useGeneratedKeys="true">
    insert into t_user_archive_post_relation (archive_id, post_id, position_level_id,
      position_grade_id, employment_begin_date, employment_end_date,
      employment_type, appoint_dismissal_reason,
      supervisor_id, operator_id, create_time,
      update_time, is_delete)
    values (#{archiveId,jdbcType=INTEGER}, #{postId,jdbcType=INTEGER}, #{positionLevelId,jdbcType=INTEGER},
      #{positionGradeId,jdbcType=INTEGER}, #{employmentBeginDate,jdbcType=DATE}, #{employmentEndDate,jdbcType=DATE},
      #{employmentType,jdbcType=VARCHAR}, #{appointDismissalReason,jdbcType=VARCHAR},
      #{supervisorId,jdbcType=INTEGER}, #{operatorId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.qinjee.masterdata.model.entity.UserArchivePostRelation" useGeneratedKeys="true">
    insert into t_user_archive_post_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="archiveId != null">
        archive_id,
      </if>
      <if test="postId != null">
        post_id,
      </if>
      <if test="positionLevelId != null">
        position_level_id,
      </if>
      <if test="positionGradeId != null">
        position_grade_id,
      </if>
      <if test="employmentBeginDate != null">
        employment_begin_date,
      </if>
      <if test="employmentEndDate != null">
        employment_end_date,
      </if>
      <if test="employmentType != null">
        employment_type,
      </if>
      <if test="appointDismissalReason != null">
        appoint_dismissal_reason,
      </if>
      <if test="supervisorId != null">
        supervisor_id,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="archiveId != null">
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="postId != null">
        #{postId,jdbcType=INTEGER},
      </if>
      <if test="positionLevelId != null">
        #{positionLevelId,jdbcType=INTEGER},
      </if>
      <if test="positionGradeId != null">
        #{positionGradeId,jdbcType=INTEGER},
      </if>
      <if test="employmentBeginDate != null">
        #{employmentBeginDate,jdbcType=DATE},
      </if>
      <if test="employmentEndDate != null">
        #{employmentEndDate,jdbcType=DATE},
      </if>
      <if test="employmentType != null">
        #{employmentType,jdbcType=VARCHAR},
      </if>
      <if test="appointDismissalReason != null">
        #{appointDismissalReason,jdbcType=VARCHAR},
      </if>
      <if test="supervisorId != null">
        #{supervisorId,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qinjee.masterdata.model.entity.UserArchivePostRelation">
    update t_user_archive_post_relation
    <set>
      <if test="archiveId != null">
        archive_id = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="postId != null">
        post_id = #{postId,jdbcType=INTEGER},
      </if>
      <if test="positionLevelId != null">
        position_level_id = #{positionLevelId,jdbcType=INTEGER},
      </if>
      <if test="positionGradeId != null">
        position_grade_id = #{positionGradeId,jdbcType=INTEGER},
      </if>
      <if test="employmentBeginDate != null">
        employment_begin_date = #{employmentBeginDate,jdbcType=DATE},
      </if>
      <if test="employmentEndDate != null">
        employment_end_date = #{employmentEndDate,jdbcType=DATE},
      </if>
      <if test="employmentType != null">
        employment_type = #{employmentType,jdbcType=VARCHAR},
      </if>
      <if test="appointDismissalReason != null">
        appoint_dismissal_reason = #{appointDismissalReason,jdbcType=VARCHAR},
      </if>
      <if test="supervisorId != null">
        supervisor_id = #{supervisorId,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qinjee.masterdata.model.entity.UserArchivePostRelation">
    update t_user_archive_post_relation
    set archive_id = #{archiveId,jdbcType=INTEGER},
      post_id = #{postId,jdbcType=INTEGER},
      position_level_id = #{positionLevelId,jdbcType=INTEGER},
      position_grade_id = #{positionGradeId,jdbcType=INTEGER},
      employment_begin_date = #{employmentBeginDate,jdbcType=DATE},
      employment_end_date = #{employmentEndDate,jdbcType=DATE},
      employment_type = #{employmentType,jdbcType=VARCHAR},
      appoint_dismissal_reason = #{appointDismissalReason,jdbcType=VARCHAR},
      supervisor_id = #{supervisorId,jdbcType=INTEGER},
      operator_id = #{operatorId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectMaxPrimaryKey" resultType="java.lang.Integer">
    select MAX (id)
    from t_position_grade_relation
  </select>
    <update id="deleteUserArchivePostRelation">
    update
    set
     is_delete = 0
     where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getUserArchivePostRelationList" resultType="com.qinjee.masterdata.model.entity.UserArchivePostRelation">
    select tua.user_name userName, tua.employee_number employeeNumber,tuapr.id, tuapr.archive_id, tuapr.post_id,
    tuapr.employment_begin_date, tuapr.employment_end_date, tuapr.employment_type, tuapr.appoint_dismissal_reason, tp.post_name postName
    left join t_user_archive tua on tuapr.archive_id = tuapr.archive_id
    left join t_post tp on tp.post_id = tuapr.post_id
    where tuapr.is_delete = 0
    <if test="postId != null">
      and post_id = #{postId}
    </if>
    and tua.is_delete = 0
  </select>

























</mapper>
