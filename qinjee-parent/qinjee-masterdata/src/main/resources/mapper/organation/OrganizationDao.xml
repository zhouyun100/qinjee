<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qinjee.masterdata.dao.organation.OrganizationDao">
    <resultMap id="BaseResultMap" type="com.qinjee.masterdata.model.vo.organization.OrganizationVO">
        <id column="org_id" jdbcType="INTEGER" property="orgId"/>
        <result column="org_code" jdbcType="VARCHAR" property="orgCode"/>
        <result column="org_name" jdbcType="VARCHAR" property="orgName"/>
        <result column="org_type" jdbcType="VARCHAR" property="orgType"/>
        <result column="org_parent_id" jdbcType="INTEGER" property="orgParentId"/>
        <result column="parent_org_name" jdbcType="VARCHAR" property="orgParentName"/>
        <result column="parent_org_code" jdbcType="VARCHAR" property="orgParentCode"/>
        <result column="employee_number" jdbcType="INTEGER" property="managerEmployeeNumber"/>
        <result column="org_full_name" jdbcType="VARCHAR" property="orgFullName"/>
        <result column="orgManagerName" jdbcType="VARCHAR" property="orgManagerName"/>
        <result column="position_name" jdbcType="VARCHAR" property="orgManagerPositionName"/>
        <result column="org_manager_id" jdbcType="INTEGER" property="orgManagerId"/>
        <result column="company_id" jdbcType="INTEGER" property="companyId"/>
        <result column="sort_id" jdbcType="INTEGER" property="sortId"/>
        <result column="operator_id" jdbcType="INTEGER" property="operatorId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="is_enable" jdbcType="SMALLINT" property="isEnable"/>
    </resultMap>
    <sql id="Base_Column_List">
    org_id, org_code, org_name, org_type, org_parent_id, org_full_name, org_manager_id,
    company_id, sort_id, operator_id, create_time, is_enable
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_organization
        where org_id = #{orgId,jdbcType=INTEGER} and is_enable =1
    </select>
    <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    update  t_organization set is_enable =0
    where org_id = #{orgId,jdbcType=INTEGER}
  </update>
    <insert id="insert" keyColumn="org_id" keyProperty="orgId"
            parameterType="com.qinjee.masterdata.model.vo.organization.OrganizationVO" useGeneratedKeys="true">
    insert into t_organization (org_code, org_name, org_type,
      org_parent_id, org_full_name, org_manager_id,
      company_id, sort_id, operator_id,
      create_time, is_enable)
    values (#{orgCode,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, #{orgType,jdbcType=VARCHAR},
      #{orgParentId,jdbcType=INTEGER}, #{orgFullName,jdbcType=VARCHAR}, #{orgManagerId,jdbcType=INTEGER},
      #{companyId,jdbcType=INTEGER}, #{sortId,jdbcType=INTEGER}, #{operatorId,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{isEnable,jdbcType=SMALLINT})
  </insert>
    <insert id="insertSelective" keyColumn="org_id" keyProperty="orgId"
            parameterType="com.qinjee.masterdata.model.vo.organization.OrganizationVO" useGeneratedKeys="true">
        insert into t_organization
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orgCode != null">
                org_code,
            </if>
            <if test="orgName != null">
                org_name,
            </if>
            <if test="orgType != null">
                org_type,
            </if>
            <if test="orgParentId != null">
                org_parent_id,
            </if>
            <if test="orgFullName != null">
                org_full_name,
            </if>
            <if test="orgManagerId != null">
                org_manager_id,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
            <if test="sortId != null">
                sort_id,
            </if>
            <if test="operatorId != null">
                operator_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="isEnable != null">
                is_enable,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orgCode != null">
                #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="orgName != null">
                #{orgName,jdbcType=VARCHAR},
            </if>
            <if test="orgType != null">
                #{orgType,jdbcType=VARCHAR},
            </if>
            <if test="orgParentId != null">
                #{orgParentId,jdbcType=INTEGER},
            </if>
            <if test="orgFullName != null">
                #{orgFullName,jdbcType=VARCHAR},
            </if>
            <if test="orgManagerId != null">
                #{orgManagerId,jdbcType=INTEGER},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=INTEGER},
            </if>
            <if test="sortId != null">
                #{sortId,jdbcType=INTEGER},
            </if>
            <if test="operatorId != null">
                #{operatorId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isEnable != null">
                #{isEnable,jdbcType=SMALLINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.qinjee.masterdata.model.vo.organization.OrganizationVO">
        update t_organization
        <set>
            <if test="orgCode != null">
                org_code = #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="orgName != null">
                org_name = #{orgName,jdbcType=VARCHAR},
            </if>
            <if test="orgType != null">
                org_type = #{orgType,jdbcType=VARCHAR},
            </if>
            <if test="orgParentId != null">
                org_parent_id = #{orgParentId,jdbcType=INTEGER},
            </if>
            <if test="orgFullName != null">
                org_full_name = #{orgFullName,jdbcType=VARCHAR},
            </if>
            <if test="orgManagerId != null">
                org_manager_id = #{orgManagerId,jdbcType=INTEGER},
            </if>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=INTEGER},
            </if>
            <if test="sortId != null">
                sort_id = #{sortId,jdbcType=INTEGER},
            </if>
            <if test="operatorId != null">
                operator_id = #{operatorId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isEnable != null">
                is_enable = #{isEnable,jdbcType=SMALLINT},
            </if>
        </set>
        where org_id = #{orgId,jdbcType=INTEGER}
    </update>


    <update id="updateByPrimaryKey" parameterType="com.qinjee.masterdata.model.vo.organization.OrganizationVO">
    update t_organization
        set org_id = #{orgId,jdbcType=VARCHAR},
        <if test="orgCode != null">
            org_code = #{orgCode,jdbcType=VARCHAR},
        </if>
          <if test="orgName != null">
              org_name = #{orgName,jdbcType=VARCHAR},
        </if>
          <if test="orgType != null">
              org_type = #{orgType,jdbcType=VARCHAR},
        </if>
          <if test="orgParentId != null">
              org_parent_id = #{orgParentId,jdbcType=INTEGER},
        </if>
          <if test="orgFullName != null">
              org_full_name = #{orgFullName,jdbcType=VARCHAR},
        </if>
          <if test="orgManagerId != null">
              org_manager_id = #{orgManagerId,jdbcType=INTEGER},
        </if>
          <if test="companyId != null">
              company_id = #{companyId,jdbcType=INTEGER},
        </if>
          <if test="sortId != null">
              sort_id = #{sortId,jdbcType=INTEGER},
        </if>

         <if test="createTime != null">
             create_time = #{createTime,jdbcType=TIMESTAMP},
        </if>
         <if test="isEnable != null">
             is_enable = #{isEnable,jdbcType=SMALLINT},
        </if>
        <if test="operatorId != null">
            operator_id = #{operatorId,jdbcType=INTEGER}
        </if>
    where org_id = #{orgId,jdbcType=INTEGER}
  </update>



    <select id="getAllOrganizationByArchiveId" resultMap="BaseResultMap">
        select
        v.org_id,v.org_code,v.org_name,v.org_type,v.org_full_name,tua.user_name orgManagerName, tua.employee_number,
        parentOrg.org_code parent_org_code,
        parentOrg.org_name parent_org_name,v.org_parent_id,v.org_manager_id,v.sort_id,v.is_enable
        from (
        select t_organization.org_id,t_organization.org_code,t_organization.org_name,t_organization.org_type,
        t_organization.org_full_name,t_organization.org_parent_id,t_organization.org_manager_id,t_organization.sort_id,t_organization.is_enable
        from t_organization,t_role_org_auth,t_user_role
        where t_user_role.archive_id = #{archiveId}
        and (t_user_role.is_trusteeship = 0
        or (t_user_role.is_trusteeship = 1
        and #{now} >= t_user_role.trusteeship_begin_time
        and t_user_role.trusteeship_end_time >= #{now}
        ))
        and t_role_org_auth.role_id = t_user_role.role_id
        and t_organization.org_id = t_role_org_auth.org_id
        and t_user_role.is_delete = 0
        and t_role_org_auth.is_delete = 0
        <if test="isEnable != null ">
            and t_organization.is_enable = 1
        </if>
        UNION
        select t_organization.org_id,t_organization.org_code,t_organization.org_name,t_organization.org_type,
        t_organization.org_full_name,t_organization.org_parent_id,t_organization.org_manager_id,t_organization.sort_id,t_organization.is_enable
        from t_organization,t_user_org_auth
        where t_user_org_auth.archive_id = #{archiveId}
        and t_organization.org_id = t_user_org_auth.org_id
        and t_user_org_auth.is_delete = 0
        <if test="isEnable != null ">
            and t_organization.is_enable = 1
        </if>
        ) v  LEFT JOIN t_organization parentOrg
        ON parentOrg.org_id = v.org_parent_id
        LEFT JOIN t_user_archive tua
        ON v.org_manager_id = tua.archive_id GROUP BY
        v.org_id,v.org_code,v.org_name,v.org_type,v.org_full_name,v.org_parent_id,v.org_manager_id,v.sort_id,v.is_enable
        ORDER BY v.org_id ASC
    </select>

    <select id="getDirectOrganizationList" resultMap="BaseResultMap">
        SELECT org.org_id,org.is_enable,org.org_code,org.org_manager_id,
        org.org_name,org.org_type,org.org_full_name,
        org.org_parent_id,
        org.user_name orgManagerName,
        parent_org.org_name parent_org_name,
        parent_org.org_code parent_org_code
        FROM (SELECT
        o.org_id,
        o.is_enable,o.org_code,o.org_manager_id,
        o.org_name,o.org_type,o.org_full_name,
        o.org_parent_id,arc.user_name
        FROM
        t_organization o
        LEFT JOIN t_user_org_auth auth ON o.org_id = auth.org_id
        LEFT JOIN t_user_archive arc ON arc.archive_id = auth.archive_id
        WHERE
        auth.is_delete = 0
        AND arc.is_delete = 0
        AND arc.archive_id = #{archiveId}
        <if test="organizationPageVo.isEnable != null ">
            and o.is_enable = 1
        </if>
        UNION
        SELECT
        o2.org_id,
        o2.is_enable,o2.org_code,o2.org_manager_id,
        o2.org_name,o2.org_type,o2.org_full_name,
        o2.org_parent_id,arch.user_name
        FROM
        t_organization o2
        LEFT JOIN t_role_org_auth roleauth ON roleauth.org_id = o2.org_id
        LEFT JOIN t_user_role role ON role.role_id = roleauth.role_id
        LEFT JOIN t_user_archive arch ON arch.archive_id = role.archive_id
        WHERE
        roleauth.is_delete = 0
        AND role.is_delete = 0
        AND arch.is_delete = 0
        AND arch.archive_id = #{archiveId}
        <if test="organizationPageVo.isEnable != null ">
            and o2.is_enable = 1
        </if>
        )org

        LEFT JOIN t_organization parent_org
        ON org.org_parent_id = parent_org.org_id
        <if test="organizationPageVo != null">
            where 1=1
            <if test="organizationPageVo.orgId != null">
                and org.org_id = #{organizationPageVo.orgId}
            </if>
            <if test="organizationPageVo.orgParentId != null">
                and org.org_parent_id = #{organizationPageVo.orgParentId}
            </if>

            <if test="organizationPageVo.querFieldVos != null and organizationPageVo.querFieldVos.size > 0">
                <foreach collection="organizationPageVo.querFieldVos" item="querField">
                    <if test="querField.fieldName != null and querField.fieldName != ''">
                        ${querField.condition}
                    </if>
                    <if test="querField.isFilterNull">
                        and ${querField.fieldName} IS NULL
                    </if>
                </foreach>
            </if>
        </if>

        <if test="sortFieldStr != null and sortFieldStr != ''">
            ORDER BY ${sortFieldStr}
        </if>
    </select>



    <update id="UpdateIsEnableByOrgIds">
        update t_organization
        set is_enable = #{isEnable,jdbcType=SMALLINT}
        where org_id in
        <foreach item="orgId" collection="orgIds"
                 open="(" separator="," close=")">
            #{orgId}
        </foreach>
    </update>

    <select id="getOrganizationListByParentOrgId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_organization
        where org_parent_id = #{orgParentId,jdbcType=INTEGER} ORDER BY sort_Id DESC
    </select>


    <select id="getSingleOrganizationListByOrgIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_organization
        where org_id in
        <foreach item="orgId" collection="orgIds"
                 open="(" separator="," close=")">
            #{orgId}
        </foreach>
    </select>
    <select id="getOrganizationByOrgCodeAndCompanyId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_organization
        where company_id = #{companyId} and org_code = #{orgCode}
    </select>
    <select id="selectOrgName" resultType="java.lang.String">
    select  org_name
    from  t_organization
    where org_id = #{id,jdbcType=INTEGER}
    and is_enable=1
  </select>
    <select id="getOrganizationsByOrgIds" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
        t_org.org_id,
        t_org.org_code,
        t_org.org_name,
        t_org.org_type,
        t_org.org_parent_id,
        t_org.org_full_name,
        t_org.org_manager_id,
        tua.user_name orgManagerName,
        tua.employee_number employee_number,
        t_org.company_id,
        t_org.sort_id,
        t_org.operator_id,
        t_org.create_time,
        t_org.is_enable,
        t_parent.org_name AS parent_org_name,
        t_parent.org_code AS parent_org_code
        FROM t_organization t_org
        LEFT JOIN    t_organization t_parent
        ON t_org.org_parent_id = t_parent.org_id
        LEFT JOIN t_user_archive tua ON tua.archive_id= t_org.org_manager_id
        WHERE t_org.org_id IN
        <foreach collection="orgIds" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <select id="getOrganizationListByUserArchiveId"  resultMap="BaseResultMap">
       SELECT v.org_id,v.org_code,v.org_name,v.org_type,v.org_full_name,o.org_code parent_org_code,o.org_name parent_org_name
       FROM (
             SELECT v1.org_id,v1.org_code,v1.org_name,v1.org_type,v1.org_parent_id,v1.org_full_name
              FROM (
                SELECT t_organization.org_id,t_organization.org_code,t_organization.org_name,t_organization.org_type,
                t_organization.org_parent_id,t_organization.org_full_name
                FROM t_role_org_auth,t_role,t_user_role,t_organization
                WHERE t_user_role.archive_id = #{archiveId}
                AND (t_user_role.is_trusteeship = 0
                OR (t_user_role.is_trusteeship = 1
                AND #{now} >= t_user_role.trusteeship_begin_time
                AND t_user_role.trusteeship_end_time >= #{now}
                ))
                AND t_user_role.role_id = t_role.role_id
                AND t_role.role_id = t_role_org_auth.role_id
                AND t_role_org_auth.org_id = t_organization.org_id
                AND t_role.is_delete = 0
                AND t_role_org_auth.is_delete = 0
                AND t_organization.is_enable = 1
      UNION
             SELECT t_organization.org_id,t_organization.org_code,t_organization.org_name,t_organization.org_type,
                t_organization.org_parent_id,t_organization.org_full_name
                FROM t_user_org_auth,t_organization
                WHERE t_user_org_auth.archive_id = #{archiveId}
                AND (t_user_org_auth.is_trusteeship = 0
                OR (t_user_org_auth.is_trusteeship = 1
                AND #{now} >= t_user_org_auth.trusteeship_begin_time
                AND t_user_org_auth.trusteeship_end_time >= #{now}
                ))
                AND t_user_org_auth.org_id = t_organization.org_id
                AND t_user_org_auth.is_delete = 0
                AND t_organization.is_enable = 1
        ) v1
        GROUP BY v1.org_id,v1.org_code,v1.org_name,v1.org_type,v1.org_parent_id,v1.org_full_name) v
        LEFT JOIN t_organization o
            ON v.org_parent_id = o.org_id
    </select>
    <select id="selectOrgIdByName" resultType="java.lang.Integer">
    select org_id
    from t_organization
    where org_name=#{name}
    and is_enable=1
  </select>
    <select id="selectManyId" resultType="com.qinjee.masterdata.model.vo.staff.BusinessOrgPostPos">
   select org.org_id as orgId ,orga.org_id as businessUnitId, post.post_id as postId ,pos.position_id as positionId
   from t_organization org,t_organization orga ,t_post post ,t_position pos
   where org.org_name=#{orgName} and orga.org_name=#{unitName} and post.post_name=#{postName}
     and pos. position_name=#{positionName} and org.is_enable = 1 and orga.is_enable=1 and post.is_enable=1
     and pos.is_delete=0
  </select>
    <update id="sortOrganization" parameterType="java.util.LinkedList">

        <foreach collection="orgIds" item="id" index="index" open="" close="" separator=";">
            UPDATE t_organization
            <set>
                sort_id=(#{index}+1)*1000
            </set>
            <where>
                org_id = #{id}
            </where>
        </foreach>
    </update>
    <select id="selectorgBycomanyIdAndUserAuth" resultType="com.qinjee.masterdata.model.vo.staff.OrganzitionVo">
            select t1.org_id,t1.org_name,t1.org_parent_id from (SELECT
            org.org_id,org.org_name,org.org_parent_id
            FROM
            t_organization org
            LEFT JOIN t_user_org_auth auth ON org.org_id = auth.org_id
            LEFT JOIN t_user_archive arc ON arc.archive_id = auth.archive_id
            WHERE
                org.is_enable = 1
            AND org.company_id=#{companyId}
            AND auth.is_delete = 0
            AND arc.is_delete = 0
            AND arc.archive_id = #{archiveId}
            UNION
            SELECT
                orga.org_id,orga.org_name,orga.org_parent_id
            FROM
                t_organization orga
            LEFT JOIN t_role_org_auth roleauth ON roleauth.org_id = orga.org_id
            LEFT JOIN t_user_role role ON role.role_id = roleauth.role_id
            LEFT JOIN t_user_archive arch ON arch.archive_id = role.archive_id
            WHERE
                orga.is_enable = 1
            AND orga.company_id=#{companyId}
            AND roleauth.is_delete = 0
            AND role.is_delete = 0
            AND arch.is_delete = 0
            AND arch.archive_id = #{archiveId})t1
            </select>



    <select id="getOrganizationGraphics" resultMap="BaseResultMap">
        SELECT
        v.org_id,
        v.org_code,
        v.org_name,
        v.org_type,
        tua.user_name orgManagerName,
        tps.position_name,
        v.org_parent_id,
        v.org_manager_id,
        tar.attachment_url attachmentUrl
        FROM (
        SELECT t_organization.org_id,t_organization.org_code,t_organization.org_name,t_organization.org_type,
        t_organization.org_full_name,t_organization.org_parent_id,t_organization.org_manager_id,t_organization.sort_id,t_organization.is_enable
        FROM t_organization,t_role_org_auth,t_user_role
        WHERE t_user_role.archive_id = #{archiveId}
        and (t_user_role.is_trusteeship = 0
        or (t_user_role.is_trusteeship = 1
        and #{now} >= t_user_role.trusteeship_begin_time
        and t_user_role.trusteeship_end_time >= #{now}
        ))
        AND t_role_org_auth.role_id = t_user_role.role_id
        AND t_organization.org_id = t_role_org_auth.org_id
        AND t_user_role.is_delete = 0
        AND t_role_org_auth.is_delete = 0

        <if test="isEnable != null ">
            and t_organization.is_enable = 1
        </if>
        UNION
        SELECT t_organization.org_id,t_organization.org_code,t_organization.org_name,t_organization.org_type,
        t_organization.org_full_name,t_organization.org_parent_id,t_organization.org_manager_id,t_organization.sort_id,t_organization.is_enable
        FROM t_organization,t_user_org_auth
        WHERE t_user_org_auth.archive_id = #{archiveId}
        AND t_organization.org_id = t_user_org_auth.org_id
        AND t_user_org_auth.is_delete = 0
        <if test="isEnable != null ">
            and t_organization.is_enable = 1
        </if>
        ) v
        LEFT JOIN  t_attachment_record tar  ON tar.business_id = v.org_manager_id AND tar.business_type = 'archive'
        LEFT JOIN t_user_archive tua
        ON tua.archive_id =v.org_manager_id
        LEFT JOIN t_post tp ON tp.post_id =tua.post_id
        LEFT JOIN t_position tps ON tps.position_id=tp.position_id
         <if test="orgIdList != null">
             where
             v.org_id in
             <foreach collection="orgIdList" item="item" close=")" open="(" separator=",">
                 #{item}
             </foreach>
         </if>
    </select>

    <select id="getAllOrganizationByArchiveIdAndOrgId" resultMap="BaseResultMap">
        SELECT v.org_id,v.org_code,v.org_name,v.org_type,v.org_full_name,o.org_code parent_org_code,o.org_name parent_org_name,
        v.org_manager_id,
        tua.employee_number,
        tua.user_name orgManagerName
       FROM (
             SELECT v1.org_id,v1.org_code,v1.org_name,v1.org_type,v1.org_parent_id,v1.org_full_name,v1.org_manager_id
              FROM (
                SELECT t_organization.org_id,t_organization.org_code,t_organization.org_name,t_organization.org_type,
                t_organization.org_parent_id,t_organization.org_full_name, t_organization.org_manager_id
                FROM t_role_org_auth,t_role,t_user_role,t_organization
                WHERE t_user_role.archive_id = #{archiveId}
                AND (t_user_role.is_trusteeship = 0
                OR (t_user_role.is_trusteeship = 1
                AND #{now} >= t_user_role.trusteeship_begin_time
                AND t_user_role.trusteeship_end_time >= #{now}
                ))
                AND t_user_role.role_id = t_role.role_id
                AND t_role.role_id = t_role_org_auth.role_id
                AND t_role_org_auth.org_id = t_organization.org_id
                AND t_role.is_delete = 0
                AND t_role_org_auth.is_delete = 0
                AND t_organization.is_enable = 1
      UNION
             SELECT t_organization.org_id,t_organization.org_code,t_organization.org_name,t_organization.org_type,
                t_organization.org_parent_id,t_organization.org_full_name, t_organization.org_manager_id
                FROM t_user_org_auth,t_organization
                WHERE t_user_org_auth.archive_id = #{archiveId}
                AND (t_user_org_auth.is_trusteeship = 0
                OR (t_user_org_auth.is_trusteeship = 1
                AND #{now} >= t_user_org_auth.trusteeship_begin_time
                AND t_user_org_auth.trusteeship_end_time >= #{now}
                ))
                AND t_user_org_auth.org_id = t_organization.org_id
                AND t_user_org_auth.is_delete = 0
                AND t_organization.is_enable = 1
        ) v1
        GROUP BY v1.org_id,v1.org_code,v1.org_name,v1.org_type,v1.org_parent_id,v1.org_full_name) v
        LEFT JOIN t_organization o
            ON v.org_parent_id = o.org_id
        LEFT JOIN t_user_archive tua ON tua.archive_id = v.org_manager_id
        <if test="orgIdList != null and orgIdList.size > 0">
            where  v.org_id in
            <foreach collection="orgIdList" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <update id="updateByOrgCode" parameterType="com.qinjee.masterdata.model.vo.organization.OrganizationVO">
        update t_organization
        <set>
            <if test="orgCode != null">
                org_code = #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="orgName != null">
                org_name = #{orgName,jdbcType=VARCHAR},
            </if>
            <if test="orgType != null">
                org_type = #{orgType,jdbcType=VARCHAR},
            </if>
            <if test="orgParentId != null">
                org_parent_id = #{orgParentId,jdbcType=INTEGER},
            </if>
            <if test="orgFullName != null">
                org_full_name = #{orgFullName,jdbcType=VARCHAR},
            </if>
            <if test="orgManagerId != null">
                org_manager_id = #{orgManagerId,jdbcType=INTEGER},
            </if>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=INTEGER},
            </if>
            <if test="sortId != null">
                sort_id = #{sortId,jdbcType=INTEGER},
            </if>
            <if test="operatorId != null">
                operator_id = #{operatorId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isEnable != null">
                is_enable = #{isEnable,jdbcType=SMALLINT},
            </if>
        </set>
        where org_code = #{orgCode,jdbcType=VARCHAR}

    </update>
    <update id="batchDelete">
        delete from t_organization
        where org_id in
        <foreach collection="idList" separator="," open="(" close=")" item="item">
            #{item}
        </foreach>
    </update>
</mapper>
