<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qinjee.masterdata.dao.organation.OrganizationDao">
    <resultMap id="BaseResultMap" type="com.qinjee.masterdata.model.vo.organization.OrganizationVO">
        <id column="org_id" jdbcType="INTEGER" property="orgId"/>
        <result column="org_code" jdbcType="VARCHAR" property="orgCode"/>
        <result column="org_name" jdbcType="VARCHAR" property="orgName"/>
        <result column="org_type" jdbcType="VARCHAR" property="orgType"/>
        <result column="org_parent_id" jdbcType="INTEGER" property="orgParentId"/>
        <result column="parent_org_name" jdbcType="VARCHAR" property="orgParentName"/>
        <result column="parent_org_code" jdbcType="VARCHAR" property="orgParentCode"/>
        <result column="employee_number" jdbcType="INTEGER" property="managerEmployeeNumber"/>
        <result column="org_full_name" jdbcType="VARCHAR" property="orgFullName"/>
        <result column="orgManagerName" jdbcType="VARCHAR" property="orgManagerName"/>
        <result column="org_manager_name" jdbcType="VARCHAR" property="orgManagerName"/>
        <result column="position_name" jdbcType="VARCHAR" property="orgManagerPositionName"/>
        <result column="org_manager_id" jdbcType="INTEGER" property="orgManagerId"/>
        <result column="company_id" jdbcType="INTEGER" property="companyId"/>
        <result column="sort_id" jdbcType="INTEGER" property="sortId"/>
        <result column="operator_id" jdbcType="INTEGER" property="operatorId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="is_enable" jdbcType="SMALLINT" property="isEnable"/>
    </resultMap>
    <resultMap id="orgMap" type="com.qinjee.masterdata.model.vo.organization.OrganizationVO">
        <id column="orgId" jdbcType="INTEGER" property="orgId"/>
        <result column="orgCode" jdbcType="VARCHAR" property="orgCode"/>
        <result column="orgName" jdbcType="VARCHAR" property="orgName"/>
        <result column="orgType" jdbcType="VARCHAR" property="orgType"/>
        <result column="orgParentId" jdbcType="INTEGER" property="orgParentId"/>
        <result column="parentOrgName" jdbcType="VARCHAR" property="orgParentName"/>
        <result column="parentOrgCode" jdbcType="VARCHAR" property="orgParentCode"/>
        <result column="employeeNumber" jdbcType="INTEGER" property="managerEmployeeNumber"/>
        <result column="orgFullName" jdbcType="VARCHAR" property="orgFullName"/>
        <result column="orgManagerName" jdbcType="VARCHAR" property="orgManagerName"/>
        <result column="positionName" jdbcType="VARCHAR" property="orgManagerPositionName"/>
        <result column="orgManagerId" jdbcType="INTEGER" property="orgManagerId"/>
        <result column="companyId" jdbcType="INTEGER" property="companyId"/>
        <result column="sortId" jdbcType="INTEGER" property="sortId"/>
        <result column="operatorId" jdbcType="INTEGER" property="operatorId"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="isEnable" jdbcType="SMALLINT" property="isEnable"/>
    </resultMap>
    <sql id="Base_Column_List">
    org_id, org_code, org_name, org_type, org_parent_id, org_full_name, org_manager_id,
    company_id, sort_id, operator_id, create_time, is_enable
  </sql>
    <select id="getOrganizationById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_organization
        where org_id = #{orgId,jdbcType=INTEGER}
    </select>
    <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    update  t_organization set is_enable =0
    where org_id = #{orgId,jdbcType=INTEGER}
  </update>
    <insert id="insert" keyColumn="org_id" keyProperty="orgId"
            parameterType="com.qinjee.masterdata.model.vo.organization.OrganizationVO" useGeneratedKeys="true">
    insert into t_organization (org_code, org_name, org_type,
      org_parent_id, org_full_name, org_manager_id,
      company_id, sort_id, operator_id,
      create_time, is_enable)
    values (#{orgCode,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, #{orgType,jdbcType=VARCHAR},
      #{orgParentId,jdbcType=INTEGER}, #{orgFullName,jdbcType=VARCHAR}, #{orgManagerId,jdbcType=INTEGER},
      #{companyId,jdbcType=INTEGER}, #{sortId,jdbcType=INTEGER}, #{operatorId,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{isEnable,jdbcType=SMALLINT})
  </insert>


    <insert id="insertSelective" keyColumn="org_id" keyProperty="orgId"
            parameterType="com.qinjee.masterdata.model.vo.organization.OrganizationVO" useGeneratedKeys="true">
        insert into t_organization
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orgCode != null">
                org_code,
            </if>
            <if test="orgName != null">
                org_name,
            </if>
            <if test="orgType != null">
                org_type,
            </if>
            <if test="orgParentId != null">
                org_parent_id,
            </if>
            <if test="orgFullName != null">
                org_full_name,
            </if>
            <if test="orgManagerId != null">
                org_manager_id,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
            <if test="sortId != null">
                sort_id,
            </if>
            <if test="operatorId != null">
                operator_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="isEnable != null">
                is_enable,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orgCode != null">
                #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="orgName != null">
                #{orgName,jdbcType=VARCHAR},
            </if>
            <if test="orgType != null">
                #{orgType,jdbcType=VARCHAR},
            </if>
            <if test="orgParentId != null">
                #{orgParentId,jdbcType=INTEGER},
            </if>
            <if test="orgFullName != null">
                #{orgFullName,jdbcType=VARCHAR},
            </if>
            <if test="orgManagerId != null">
                #{orgManagerId,jdbcType=INTEGER},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=INTEGER},
            </if>
            <if test="sortId != null">
                #{sortId,jdbcType=INTEGER},
            </if>
            <if test="operatorId != null">
                #{operatorId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isEnable != null">
                #{isEnable,jdbcType=SMALLINT},
            </if>
        </trim>
    </insert>
    <update id="updateOrganization" parameterType="com.qinjee.masterdata.model.vo.organization.OrganizationVO">
        update t_organization
        <set>
            <if test="orgCode != null">
                org_code = #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="orgName != null">
                org_name = #{orgName,jdbcType=VARCHAR},
            </if>
            <if test="orgType != null">
                org_type = #{orgType,jdbcType=VARCHAR},
            </if>
            <if test="orgParentId != null">
                org_parent_id = #{orgParentId,jdbcType=INTEGER},
            </if>
            <if test="orgFullName != null">
                org_full_name = #{orgFullName,jdbcType=VARCHAR},
            </if>
            <if test="orgManagerId != null">
                org_manager_id = #{orgManagerId,jdbcType=INTEGER},
            </if>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=INTEGER},
            </if>
            <if test="sortId != null">
                sort_id = #{sortId,jdbcType=INTEGER},
            </if>
            <if test="operatorId != null">
                operator_id = #{operatorId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isEnable != null">
                is_enable = #{isEnable,jdbcType=SMALLINT},
            </if>
        </set>
        where org_id = #{orgId,jdbcType=INTEGER}
    </update>


    <update id="updateByPrimaryKey" parameterType="com.qinjee.masterdata.model.vo.organization.OrganizationVO">
        update t_organization
        <set>
            org_manager_id = #{orgManagerId,jdbcType=INTEGER},
            org_id = #{orgId,jdbcType=VARCHAR},
            <if test="orgCode != null">
                org_code = #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="orgName != null">
                org_name = #{orgName,jdbcType=VARCHAR},
            </if>
            <if test="orgType != null">
                org_type = #{orgType,jdbcType=VARCHAR},
            </if>
            <if test="orgParentId != null">
                org_parent_id = #{orgParentId,jdbcType=INTEGER},
            </if>
            <if test="orgFullName != null">
                org_full_name = #{orgFullName,jdbcType=VARCHAR},
            </if>

            <if test="companyId != null">
                company_id = #{companyId,jdbcType=INTEGER},
            </if>
            <if test="sortId != null">
                sort_id = #{sortId,jdbcType=INTEGER},
            </if>

            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isEnable != null">
                is_enable = #{isEnable,jdbcType=SMALLINT},
            </if>
            <if test="operatorId != null">
                operator_id = #{operatorId,jdbcType=INTEGER}
            </if>
        </set>
        where org_id = #{orgId,jdbcType=INTEGER}
    </update>


    <select id="listAllOrganizationByArchiveId" resultMap="BaseResultMap">
        select
        v.org_id,v.org_code,v.org_name,v.org_type,v.org_full_name,tua.user_name orgManagerName, tua.employee_number,
        parentOrg.org_code parent_org_code,
        parentOrg.org_name parent_org_name,v.org_parent_id,v.org_manager_id,v.sort_id,v.is_enable
        from (
        select t_organization.org_id,t_organization.org_code,t_organization.org_name,t_organization.org_type,
        t_organization.org_full_name,t_organization.org_parent_id,t_organization.org_manager_id,t_organization.sort_id,t_organization.is_enable
        from t_organization,t_role_org_auth,t_user_role
        where t_user_role.archive_id = #{archiveId}
        and (t_user_role.is_trusteeship = 0
        or (t_user_role.is_trusteeship = 1
        and #{now} >= t_user_role.trusteeship_begin_time
        and t_user_role.trusteeship_end_time >= #{now}
        ))
        and t_role_org_auth.role_id = t_user_role.role_id
        and t_organization.org_id = t_role_org_auth.org_id
        and t_user_role.is_delete = 0
        and t_role_org_auth.is_delete = 0
        <if test="isEnable != null ">
            and t_organization.is_enable = 1
        </if>
        UNION
        select t_organization.org_id,t_organization.org_code,t_organization.org_name,t_organization.org_type,
        t_organization.org_full_name,t_organization.org_parent_id,t_organization.org_manager_id,t_organization.sort_id,t_organization.is_enable
        from t_organization,t_user_org_auth
        where t_user_org_auth.archive_id = #{archiveId}
        and t_organization.org_id = t_user_org_auth.org_id
        and t_user_org_auth.is_delete = 0
        <if test="isEnable != null ">
            and t_organization.is_enable = 1
        </if>
        ) v LEFT JOIN t_organization parentOrg
        ON parentOrg.org_id = v.org_parent_id
        LEFT JOIN t_user_archive tua
        ON v.org_manager_id = tua.archive_id GROUP BY
        v.org_id,v.org_code,v.org_name,v.org_type,v.org_full_name,v.org_parent_id,v.org_manager_id,v.sort_id,v.is_enable
        ORDER BY v.sort_id ASC
    </select>
    <select id="listAllOrgIdsByArchiveId" resultMap="BaseResultMap">
        select
        v.org_id,v.org_parent_id
        from (
        select t_organization.org_id,t_organization.org_manager_id,t_organization.org_parent_id
        from t_organization,t_role_org_auth,t_user_role
        where t_user_role.archive_id = #{archiveId}
        and (t_user_role.is_trusteeship = 0
        or (t_user_role.is_trusteeship = 1
        and #{now} >= t_user_role.trusteeship_begin_time
        and t_user_role.trusteeship_end_time >= #{now}
        ))
        and t_role_org_auth.role_id = t_user_role.role_id
        and t_organization.org_id = t_role_org_auth.org_id
        and t_user_role.is_delete = 0
        and t_role_org_auth.is_delete = 0
        <if test="isEnable != null ">
            and t_organization.is_enable = 1
        </if>
        UNION
        select t_organization.org_id,t_organization.org_manager_id,t_organization.org_parent_id
        from t_organization,t_user_org_auth
        where t_user_org_auth.archive_id = #{archiveId}
        and t_organization.org_id = t_user_org_auth.org_id
        and t_user_org_auth.is_delete = 0
        <if test="isEnable != null ">
            and t_organization.is_enable = 1
        </if>
        ) v LEFT JOIN t_organization parentOrg
        ON parentOrg.org_id = v.org_parent_id
        LEFT JOIN t_user_archive tua
        ON v.org_manager_id = tua.archive_id
    </select>

    <select id="getOrgIds" resultType="integer">

        SELECT org_id
        FROM (
        SELECT t1.org_id, IF(FIND_IN_SET(org_parent_id, @pids) > 0, @pids := CONCAT(@pids, ',', org_id), 0) AS ischild
        FROM (
        SELECT t_org.org_id,t_org.org_parent_id
        FROM t_organization t_org
        LEFT JOIN
        t_role_org_auth t_roa ON t_org.org_id = t_roa.org_id AND t_roa.is_delete=0
        LEFT JOIN
        t_user_role t_ur ON t_ur.role_id = t_roa.role_id AND t_ur.is_delete =0
        WHERE t_ur.archive_id = #{archiveId} AND (t_ur.is_trusteeship = 0 OR (t_ur.is_trusteeship = 1 AND #{now} >=
        t_ur.trusteeship_begin_time AND
        t_ur.trusteeship_end_time >= #{now} ))
        <if test="isEnable != null ">and t_org.is_enable =1</if>
        GROUP BY t_org.org_id
        UNION SELECT
        t_org.org_id,t_org.org_parent_id
        FROM t_organization t_org,t_user_org_auth t_uoa
        WHERE t_uoa.archive_id = #{archiveId} AND t_org.org_id = t_uoa.org_id AND t_uoa.is_delete = 0 AND
        t_org.is_enable =1 ) t1,(SELECT @pids:=#{orgId} )t2 ) t3
        WHERE ischild != 0 OR t3.org_id = #{orgId};

    </select>


    <select id="listDirectOrganizationByCondition" resultMap="BaseResultMap">
        select
        org_id,is_enable,org_code,org_manager_id,
        org_name,org_type,org_full_name,
        org_parent_id,
        parent_org_name,
        parent_org_code
        from
        (
        SELECT org_union.org_id ,
        org_union.sort_id ,
        org_union.is_enable,
        org_union.org_code ,
        org_union.org_manager_id ,
        org_union.org_name ,
        org_union.org_type ,
        org_union.org_full_name ,
        org_union.org_parent_id,
        org_manager_name,
        parent_org.org_name parent_org_name,
        parent_org.org_code parent_org_code
        FROM
        (SELECT
        o.org_id , o.sort_id ,
        o.is_enable ,o.org_code ,o.org_manager_id ,
        o.org_name ,o.org_type ,o.org_full_name ,
        o.org_parent_id org_parent_id,arc.user_name org_manager_name
        FROM
        t_organization o
        LEFT JOIN t_user_org_auth auth ON o.org_id = auth.org_id
        LEFT JOIN t_user_archive arc ON arc.archive_id = auth.archive_id
        WHERE
        auth.is_delete = 0
        AND arc.is_delete = 0
        AND arc.archive_id = #{archiveId}
        <if test="organizationPageBO.isEnable != null ">
            and o.is_enable = 1
        </if>
        UNION
        SELECT
        o2.org_id , o2.sort_id ,
        o2.is_enable ,o2.org_code ,o2.org_manager_id ,
        o2.org_name ,o2.org_type ,o2.org_full_name ,
        o2.org_parent_id org_parent_id,arch.user_name org_manager_name
        FROM
        t_organization o2
        LEFT JOIN t_role_org_auth roleauth ON roleauth.org_id = o2.org_id
        LEFT JOIN t_user_role role ON role.role_id = roleauth.role_id
        LEFT JOIN t_user_archive arch ON arch.archive_id = role.archive_id
        WHERE
        roleauth.is_delete = 0
        AND role.is_delete = 0
        AND arch.is_delete = 0
        AND arch.archive_id = #{archiveId}
        <if test="organizationPageBO.isEnable != null ">
            and o2.is_enable = 1
        </if>
        )org_union
        LEFT JOIN t_organization parent_org
        ON org_union.org_parent_id = parent_org.org_id
        <if test="organizationPageBO != null">
            where 1=1

            <if test="organizationPageBO.orgParentId != null">
                and org_union.org_parent_id = #{organizationPageBO.orgParentId}
            </if>
        </if>
        ) lastTable
        where 1=1
        <if test="whereSql !=null">
            ${whereSql}
        </if>
        order by lastTable.sort_id asc
        <if test="orderSql !=null">
            ,
            ${orderSql}
        </if>
    </select>


    <update id="updateEnable">

        <if test="orgIds !=null and orgIds.size >0 ">
            update t_organization
            <set>
                is_enable = #{isEnable,jdbcType=SMALLINT}
            </set>
            <where>
                org_id in
                <foreach item="orgId" collection="orgIds"
                         open="(" separator="," close=")">
                    #{orgId}
                </foreach>
            </where>
        </if>
    </update>

    <select id="listSonOrganization" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_organization
        where org_parent_id = #{orgParentId,jdbcType=INTEGER} ORDER BY sort_Id DESC
    </select>
    <select id="listSonFullNameAndType" resultMap="BaseResultMap">
        select
       org_id,org_name,org_full_name,org_type,org_parent_id
        from t_organization
        where org_parent_id = #{orgParentId,jdbcType=INTEGER}  ORDER BY sort_Id DESC
    </select>

    <select id="ensureRight" resultType="int">
        SELECT
		count(1)
	FROM
		t_organization t
	WHERE
		t.org_id = #{orgId}
		AND NOT EXISTS (
		SELECT
			t2.org_id
		FROM
			t_organization t2
		WHERE
			#{orgId} NOT IN (
			SELECT
				v.org_id
			FROM
				(
				SELECT
					t_organization.org_id
				FROM
					t_organization,
					t_role_org_auth,
					t_user_role
				WHERE
					t_user_role.archive_id = #{archiveId}
					AND t_role_org_auth.role_id = t_user_role.role_id
					AND t_organization.org_id = t_role_org_auth.org_id
					AND t_user_role.is_delete = 0
					AND t_role_org_auth.is_delete = 0

				UNION

				SELECT
					t_organization.org_id
				FROM
					t_organization,
					t_user_org_auth
				WHERE
					t_user_org_auth.archive_id = #{archiveId}
					AND t_organization.org_id = t_user_org_auth.org_id
					AND t_user_org_auth.is_delete = 0
				) v
			)
			OR (t2.org_parent_id = #{orgId} and t2.is_enable = 1)
		)

    </select>
    <select id="listOrgnizationByIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_organization
        where org_id in
        <foreach item="orgId" collection="orgIds"
                 open="(" separator="," close=")">
            #{orgId}
        </foreach>
    </select>
    <select id="getOrganizationByOrgCodeAndCompanyId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_organization
        where company_id = #{companyId} and org_code = #{orgCode}
    </select>
    <select id="selectOrgName" resultType="java.lang.String">
    select  org_name
    from  t_organization
    where org_id = #{id,jdbcType=INTEGER}
    and company_id=#{companyId}
    and is_enable=1
  </select>
    <select id="listOrganizationsByCondition" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select org_id ,
        org_code ,
        org_name ,
        org_type ,
        org_parent_id ,
        org_full_name ,
        org_manager_id ,
        org_manager_name ,
        employee_number ,
        company_id,
        sort_id,
        operator_id,
        create_time,
        is_enable,
        parent_org_name,
        parent_org_code
        from (
        SELECT
        t_org.org_id ,
        t_org.org_code ,
        t_org.org_name ,
        t_org.org_type ,
        t_org.org_parent_id ,
        t_org.org_full_name ,
        t_org.org_manager_id ,
        tua.user_name org_manager_name ,
        tua.employee_number ,
        t_org.company_id,
        t_org.sort_id,
        t_org.operator_id,
        t_org.create_time,
        t_org.is_enable,
        t_parent.org_name AS parent_org_name,
        t_parent.org_code AS parent_org_code
        FROM t_organization t_org
        LEFT JOIN t_organization t_parent
        ON t_org.org_parent_id = t_parent.org_id
        LEFT JOIN t_user_archive tua ON tua.archive_id= t_org.org_manager_id
        WHERE t_org.org_id IN
        <foreach collection="orgIds" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        ) lastTable
        <if test="whereSql !=null">
            where 1=1
            ${whereSql}
        </if>
        order by lastTable.parent_org_code asc, lastTable.sort_id asc
        <if test="orderSql !=null">
            ,
            ${orderSql}
        </if>
    </select>
    <select id="listOrganizationsByIds" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
        t_org.org_id,
        t_org.org_code,
        t_org.org_name,
        t_org.org_type,
        t_org.org_parent_id,
        t_org.org_full_name,
        t_org.org_manager_id,
        tua.user_name orgManagerName,
        tua.employee_number employee_number,
        t_org.company_id,
        t_org.sort_id,
        t_org.operator_id,
        t_org.create_time,
        t_org.is_enable,
        t_parent.org_name AS parent_org_name,
        t_parent.org_code AS parent_org_code
        FROM t_organization t_org
        LEFT JOIN t_organization t_parent
        ON t_org.org_parent_id = t_parent.org_id
        LEFT JOIN t_user_archive tua ON tua.archive_id= t_org.org_manager_id
        WHERE t_org.org_id IN
        <foreach collection="orgIds" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        order by t_parent.org_code asc, t_org.sort_id asc
    </select>

    <select id="listOrganizationByArchiveId" resultMap="BaseResultMap">
       SELECT v.org_id,v.org_code,v.org_name,v.org_type,v.org_full_name,o.org_code parent_org_code,o.org_name parent_org_name
       FROM (
             SELECT v1.org_id,v1.org_code,v1.org_name,v1.org_type,v1.org_parent_id,v1.org_full_name
              FROM (
                SELECT t_organization.org_id,t_organization.org_code,t_organization.org_name,t_organization.org_type,
                t_organization.org_parent_id,t_organization.org_full_name
                FROM t_role_org_auth,t_role,t_user_role,t_organization
                WHERE t_user_role.archive_id = #{archiveId}
                AND (t_user_role.is_trusteeship = 0
                OR (t_user_role.is_trusteeship = 1
                AND #{now} >= t_user_role.trusteeship_begin_time
                AND t_user_role.trusteeship_end_time >= #{now}
                ))
                AND t_user_role.role_id = t_role.role_id
                AND t_role.role_id = t_role_org_auth.role_id
                AND t_role_org_auth.org_id = t_organization.org_id
                AND t_role.is_delete = 0
                AND t_role_org_auth.is_delete = 0
                AND t_organization.is_enable = 1
      UNION
             SELECT t_organization.org_id,t_organization.org_code,t_organization.org_name,t_organization.org_type,
                t_organization.org_parent_id,t_organization.org_full_name
                FROM t_user_org_auth,t_organization
                WHERE t_user_org_auth.archive_id = #{archiveId}
                AND (t_user_org_auth.is_trusteeship = 0
                OR (t_user_org_auth.is_trusteeship = 1
                AND #{now} >= t_user_org_auth.trusteeship_begin_time
                AND t_user_org_auth.trusteeship_end_time >= #{now}
                ))
                AND t_user_org_auth.org_id = t_organization.org_id
                AND t_user_org_auth.is_delete = 0
                AND t_organization.is_enable = 1
        ) v1
        GROUP BY v1.org_id,v1.org_code,v1.org_name,v1.org_type,v1.org_parent_id,v1.org_full_name) v
        LEFT JOIN t_organization o
            ON v.org_parent_id = o.org_id
    </select>
    <select id="selectManyId" resultType="com.qinjee.masterdata.model.vo.staff.BusinessOrgPostPos">
   select org.org_id as orgId ,orga.org_id as businessUnitId, post.post_id as postId ,pos.position_id as positionId
   from t_organization org,t_organization orga ,t_post post ,t_position pos
   where org.org_name=#{orgName} and orga.org_name=#{unitName} and post.post_name=#{postName}
     and pos. position_name=#{positionName} and org.is_enable = 1 and orga.is_enable=1 and post.is_enable=1
     and pos.is_delete=0
  </select>
    <update id="sortOrganization" parameterType="java.util.LinkedList">

        <foreach collection="orgIds" item="id" index="index" open="" close="" separator=";">
            UPDATE t_organization
            <set>
                sort_id=(#{index}+1)*1000
            </set>
            <where>
                org_id = #{id}
            </where>
        </foreach>
    </update>
    <select id="getOrganizationBycomanyIdAndUserAuth" resultType="com.qinjee.masterdata.model.vo.staff.OrganzitionVo">
            select t1.org_id,t1.org_name,t1.org_parent_id from (SELECT
            org.org_id,org.org_name,org.org_parent_id
            FROM
            t_organization org
            LEFT JOIN t_user_org_auth auth ON org.org_id = auth.org_id
            LEFT JOIN t_user_archive arc ON arc.archive_id = auth.archive_id
            WHERE
                org.is_enable = 1
            AND org.company_id=#{companyId}
            AND auth.is_delete = 0
            AND arc.is_delete = 0
            AND arc.archive_id = #{archiveId}
            and (auth.is_trusteeship = 0
            or (auth.trusteeship_begin_time <![CDATA[<=]]> CURDATE()) and CURDATE() > auth.trusteeship_end_time
            )
            UNION
            SELECT
                orga.org_id,orga.org_name,orga.org_parent_id
            FROM
                t_organization orga
            LEFT JOIN t_role_org_auth roleauth ON roleauth.org_id = orga.org_id
            LEFT JOIN t_user_role role ON role.role_id = roleauth.role_id
            LEFT JOIN t_user_archive arch ON arch.archive_id = role.archive_id
            WHERE
                orga.is_enable = 1
            and (role.is_trusteeship = 0
            or (role.trusteeship_begin_time <![CDATA[<=]]> CURDATE() and CURDATE() > role.trusteeship_end_time)
            )
            AND orga.company_id=#{companyId}
            AND roleauth.is_delete = 0
            AND role.is_delete = 0
            AND arch.is_delete = 0
            AND arch.archive_id = #{archiveId})t1
            </select>


    <select id="getOrganizationGraphics" resultMap="BaseResultMap">
        SELECT
        v.org_id,
        v.org_code,
        v.org_name,
        v.org_type,
        tua.user_name orgManagerName,
        tps.position_name,
        v.org_parent_id,
        v.org_manager_id,
        tui.headimgurl attachmentUrl
        FROM (
        SELECT t_organization.org_id,t_organization.org_code,t_organization.org_name,t_organization.org_type,
        t_organization.org_full_name,t_organization.org_parent_id,t_organization.org_manager_id,t_organization.sort_id,t_organization.is_enable
        FROM t_organization,t_role_org_auth,t_user_role
        WHERE t_user_role.archive_id = #{archiveId}
        and (t_user_role.is_trusteeship = 0
        or (t_user_role.is_trusteeship = 1
        and #{now} >= t_user_role.trusteeship_begin_time
        and t_user_role.trusteeship_end_time >= #{now}
        ))
        AND t_role_org_auth.role_id = t_user_role.role_id
        AND t_organization.org_id = t_role_org_auth.org_id
        AND t_user_role.is_delete = 0
        AND t_role_org_auth.is_delete = 0

        <if test="isEnable != null ">
            and t_organization.is_enable = 1
        </if>
        UNION
        SELECT t_organization.org_id,t_organization.org_code,t_organization.org_name,t_organization.org_type,
        t_organization.org_full_name,t_organization.org_parent_id,t_organization.org_manager_id,t_organization.sort_id,t_organization.is_enable
        FROM t_organization,t_user_org_auth
        WHERE t_user_org_auth.archive_id = #{archiveId}
        AND t_organization.org_id = t_user_org_auth.org_id
        AND t_user_org_auth.is_delete = 0
        <if test="isEnable != null ">
            and t_organization.is_enable = 1
        </if>
        ) v

        LEFT JOIN t_user_archive tua
        ON tua.archive_id =v.org_manager_id
        LEFT JOIN t_post tp ON tp.post_id =tua.post_id
        LEFT JOIN t_position tps ON tps.position_id=tp.position_id
        LEFT JOIN t_user_info tui ON tui.user_id = tua.user_id
        <if test="orgIdList != null">
            where
            v.org_id in
            <foreach collection="orgIdList" item="item" close=")" open="(" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="listAllOrganizationByArchiveIdAndOrgId" resultMap="BaseResultMap">
        SELECT org_id,org_code,org_name,org_type,org_full_name,org_manager_id,
        parent_org_code,parent_org_name,
        employee_number, org_manager_name
        from (
        SELECT temp_2.org_id,temp_2.org_code,temp_2.org_name,temp_2.org_type,temp_2.org_full_name,temp_2.org_manager_id,
        p_org.org_code parent_org_code,p_org.org_name parent_org_name,
        arc.employee_number, arc.user_name org_manager_name
        FROM (
        SELECT
        temp.org_id,temp.org_code,temp.org_name,temp.org_type,temp.org_parent_id,temp.org_full_name,temp.org_manager_id
        FROM (
        -- 找出当前用户的角色下的机构
        SELECT t_org.org_id,t_org.org_code,t_org.org_name,t_org.org_type, t_org.org_parent_id,t_org.org_full_name,
        t_org.org_manager_id
        FROM t_organization t_org
        LEFT JOIN t_role_org_auth troa ON troa.org_id =t_org.org_id AND troa.is_delete =0
        LEFT JOIN t_user_role tur ON tur.role_id =troa.role_id AND tur.is_delete =0
        AND (tur.is_trusteeship = 0 OR (tur.is_trusteeship = 1 AND #{now} >= tur.trusteeship_begin_time
        AND tur.trusteeship_end_time >= #{now} ))
        WHERE tur.archive_id = #{archiveId}
        -- AND t_org.is_enable = 1
        GROUP BY t_org.org_id
        UNION
        SELECT t_org.org_id,t_org.org_code,t_org.org_name,t_org.org_type, t_org.org_parent_id,t_org.org_full_name,
        t_org.org_manager_id
        FROM t_organization t_org
        LEFT JOIN t_user_org_auth tuoa
        ON t_org.org_id = tuoa.org_id AND tuoa.is_delete =0
        AND (tuoa.is_trusteeship = 0 OR (tuoa.is_trusteeship = 1 AND #{now} >= tuoa.trusteeship_begin_time
        AND tuoa.trusteeship_end_time >= #{now} ))
        WHERE -- t_org.is_enable = 1 AND
        tuoa.archive_id = #{archiveId}
        GROUP BY t_org.org_id
        ) temp
        where temp.org_id in
        <foreach collection="orgIdList" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
        ) temp_2
        LEFT JOIN t_organization p_org
        ON temp_2.org_parent_id = p_org.org_id
        LEFT JOIN t_user_archive arc
        ON arc.archive_id = temp_2.org_manager_id
        ) lastTable
        <if test="whereSql !=null">
            where 1=1
            ${whereSql}
        </if>
        <if test="orderSql !=null">
            order by
            ${orderSql}
        </if>
    </select>

    <select id="listOrganizationByCompanyId" resultMap="BaseResultMap">
        select
         org.org_id, org.org_code,p_org.org_code parent_org_code, org.org_name, org.org_type, org.org_parent_id, org.org_full_name, org.org_manager_id,org.is_enable
        from t_organization org
        left join t_organization p_org on p_org.org_id =org.org_parent_id
        where org.company_id =#{companyId}
    </select>
    <update id="updateByOrgCode" keyProperty="orgId"
            parameterType="com.qinjee.masterdata.model.vo.organization.OrganizationVO">
        update t_organization
        <set>
            <if test="orgCode != null">
                org_code = #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="orgName != null">
                org_name = #{orgName,jdbcType=VARCHAR},
            </if>
            <if test="orgType != null">
                org_type = #{orgType,jdbcType=VARCHAR},
            </if>
            <if test="orgParentId != null">
                org_parent_id = #{orgParentId,jdbcType=INTEGER},
            </if>
            <if test="orgFullName != null">
                org_full_name = #{orgFullName,jdbcType=VARCHAR},
            </if>
            <if test="orgManagerId != null">
                org_manager_id = #{orgManagerId,jdbcType=INTEGER},
            </if>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=INTEGER},
            </if>
            <if test="sortId != null">
                sort_id = #{sortId,jdbcType=INTEGER},
            </if>
            <if test="operatorId != null">
                operator_id = #{operatorId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isEnable != null">
                is_enable = #{isEnable,jdbcType=SMALLINT},
            </if>
        </set>
        where org_code = #{orgCode,jdbcType=VARCHAR} and company_id =#{companyId}

    </update>
    <update id="batchUpdateByOrgCode" keyProperty="orgId"
            parameterType="list">

        <foreach collection="forUpdateVoList" item="item" index="index" open="" close="" separator=";">
            update t_organization
            <set>
                <if test="item.orgCode != null">
                    org_code = #{item.orgCode,jdbcType=VARCHAR},
                </if>
                <if test="item.orgName != null">
                    org_name = #{item.orgName,jdbcType=VARCHAR},
                </if>
                <if test="item.orgType != null">
                    org_type = #{item.orgType,jdbcType=VARCHAR},
                </if>
                <if test="item.orgParentId != null">
                    org_parent_id = #{item.orgParentId,jdbcType=INTEGER},
                </if>
                <if test="item.orgFullName != null">
                    org_full_name = #{item.orgFullName,jdbcType=VARCHAR},
                </if>
                <if test="item.orgManagerId != null">
                    org_manager_id = #{item.orgManagerId,jdbcType=INTEGER},
                </if>
                <if test="item.companyId != null">
                    company_id = #{item.companyId,jdbcType=INTEGER},
                </if>
                <if test="item.sortId != null">
                    sort_id = #{item.sortId,jdbcType=INTEGER},
                </if>
                <if test="item.operatorId != null">
                    operator_id = #{item.operatorId,jdbcType=INTEGER},
                </if>

                <if test="item.isEnable != null">
                    is_enable = #{item.isEnable,jdbcType=SMALLINT},
                </if>
            </set>
            where org_code = #{item.orgCode,jdbcType=VARCHAR} and company_id =#{item.companyId}
        </foreach>

    </update>
    <delete id="batchDeleteOrganization">
        delete from t_organization
        where org_id in
        <foreach collection="idList" separator="," open="(" close=")" item="item">
            #{item}
        </foreach>
    </delete>
    <select id="selectOrgIdByNameAndCompanyId" resultType="java.util.Map">
        select org.org_id,post.post_id from t_organization org
        left join t_post post on org.org_id=post.org_id and post.is_delete=0
        where org.org_name=#{orgName}
        and org.company_id=#{CompanyId}
        and post.post_name=#{postName}
        and org.is_enable=1
    </select>
    <select id="getNameForOrganzition" resultType="java.util.Map">
        select org.org_name,orga.org_name as bussiness_name,post.post_name
        from t_organization org,t_organization orga ,t_post post
        where org.org_id=#{orgId}
        and orga.org_id=#{companyId}
        and post.post_id=#{postId}
        and org.is_enable=1
        and orga.is_enable=1
        and post.is_delete=0
    </select>
    <select id="getOrgById" resultType="com.qinjee.masterdata.model.vo.organization.OrganizationVO"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_organization
        where org_id=#{orgId}
        and company_id=#{companyId}
        and is_enable=1
    </select>
    <select id="selectBusinessUnitIdByName" resultType="java.lang.Integer">
        select org_id
        from t_organization
        where org_name = #{businessName}
        and company_id = #{companyId}
        and is_enable=1
    </select>
    <select id="selectByOrgId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_organization
        where is_enable=1
        and org_id in
        <foreach collection="orgId" separator="," open="(" close=")" item="item">
            #{item}
        </foreach>
    </select>

    <insert id="batchInsert" parameterType="arraylist">
        insert into t_organization (org_code, org_name, org_type,
        org_parent_id, org_full_name, org_manager_id,
        company_id, sort_id, operator_id)
        values
        <foreach collection="forInsertVoList" item="item" separator=",">
            (#{item.orgCode,jdbcType=VARCHAR}, #{item.orgName,jdbcType=VARCHAR}, #{item.orgType,jdbcType=VARCHAR},
            #{item.orgParentId,jdbcType=INTEGER}, #{item.orgFullName,jdbcType=VARCHAR},
            #{item.orgManagerId,jdbcType=INTEGER},
            #{item.companyId,jdbcType=INTEGER}, #{item.sortId,jdbcType=INTEGER}, #{item.operatorId,jdbcType=INTEGER}
            )
        </foreach>
    </insert>
    <select id="getTopOrganization" parameterType="integer" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"></include>
        from t_organization where company_id =#{companyId} and org_parent_id =0 limit 1
    </select>
</mapper>
