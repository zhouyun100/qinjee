<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qinjee.masterdata.dao.staffdao.preemploymentdao.PreEmploymentDao">
  <!-- 结果映射 -->
  <resultMap id="BaseResultMap" type="com.qinjee.masterdata.model.entity.PreEmployment">
    <id column="employment_id" property="employmentId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="id_type" property="idType" jdbcType="VARCHAR" />
    <result column="id_number" property="idNumber" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="VARCHAR" />
    <result column="first_work_date" property="firstWorkDate" jdbcType="VARCHAR" />
    <result column="marital_status" property="maritalStatus" jdbcType="VARCHAR" />
    <result column="highest_degree" property="highestDegree" jdbcType="VARCHAR" />
    <result column="graduated_school" property="graduatedSchool" jdbcType="VARCHAR" />
    <result column="graduated_speciality" property="graduatedSpeciality" jdbcType="VARCHAR" />
    <result column="last_work_company" property="lastWorkCompany" jdbcType="VARCHAR" />
    <result column="is_give_birth" property="isGiveBirth" jdbcType="VARCHAR" />
    <result column="resident_character" property="residentCharacter" jdbcType="VARCHAR" />
    <result column="height" property="height" jdbcType="VARCHAR" />
    <result column="blood_type" property="bloodType" jdbcType="VARCHAR" />
    <result column="english_name" property="englishName" jdbcType="VARCHAR" />
    <result column="nationality" property="nationality" jdbcType="INTEGER" />
    <result column="birth_date" property="birthDate" jdbcType="VARCHAR" />
    <result column="political_status" property="politicalStatus" jdbcType="INTEGER" />
    <result column="birthplace" property="birthplace" jdbcType="VARCHAR" />
    <result column="application_position" property="applicationPosition" jdbcType="VARCHAR" />
    <result column="probation_period" property="probationPeriod" jdbcType="VARCHAR" />
    <result column="hire_date" property="hireDate" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="INTEGER" />
    <result column="post_id" property="postId" jdbcType="INTEGER" />
    <result column="employment_state" property="employmentState" jdbcType="VARCHAR" />
    <result column="employment_register" property="employmentRegister" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="data_source" property="dataSource" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="operator_id" property="operatorId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="VARCHAR" />
  </resultMap>
    <resultMap id="t_pre_employmentMap" type="com.qinjee.masterdata.model.vo.staff.export.ExportPreVo">
        <result column="user_name" property="user_name" jdbcType="VARCHAR" />
        <result column="employment_id" property="employment_id" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="gender" property="gender" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="id_type" property="id_type" jdbcType="VARCHAR" />
        <result column="id_number" property="id_number" jdbcType="VARCHAR" />
        <result column="age" property="age" jdbcType="VARCHAR" />
        <result column="first_work_date" property="first_work_date" jdbcType="VARCHAR" />
        <result column="highest_degree" property="highest_degree" jdbcType="VARCHAR" />
        <result column="graduated_school" property="graduated_school" jdbcType="VARCHAR" />
        <result column="graduated_speciality" property="graduated_speciality" jdbcType="VARCHAR" />
        <result column="last_work_company" property="last_work_company" jdbcType="VARCHAR" />
        <result column="probation_period" property="probation_period" jdbcType="VARCHAR" />
        <result column="hire_date" property="hire_date" jdbcType="VARCHAR" />
        <result column="org_id" property="org_id" jdbcType="INTEGER" />
        <result column="post_id" property="post_id" jdbcType="INTEGER" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="org_name" property="org_name" jdbcType="VARCHAR" />
        <result column="org_code" property="org_code" jdbcType="VARCHAR" />
        <result column="post_name" property="post_name" jdbcType="VARCHAR" />
        <result column="post_code" property="post_code" jdbcType="VARCHAR" />
        <result column="application_position" property="application_position" jdbcType="VARCHAR" />
    </resultMap>

  <!-- 表所有字段 -->
  <sql id="Base_Column_List">
        t_pre_employment.employment_id, t_pre_employment.user_name, t_pre_employment.phone, t_pre_employment.gender, t_pre_employment.email, t_pre_employment.id_type,
        t_pre_employment.id_number, t_pre_employment.age, t_pre_employment.first_work_date, t_pre_employment.marital_status, t_pre_employment.highest_degree, t_pre_employment.graduated_school,
        t_pre_employment.graduated_speciality, t_pre_employment.last_work_company, t_pre_employment.is_give_birth, t_pre_employment.resident_character, t_pre_employment.height, t_pre_employment.blood_type,
        t_pre_employment.english_name, t_pre_employment.nationality, t_pre_employment.birth_date, t_pre_employment.political_status, t_pre_employment.birthplace, t_pre_employment.application_position,
        t_pre_employment.probation_period, t_pre_employment.hire_date, t_pre_employment.org_id, t_pre_employment.post_id, t_pre_employment.employment_state, t_pre_employment.employment_register,
        t_pre_employment.description, t_pre_employment.data_source, t_pre_employment.company_id, t_pre_employment.operator_id, t_pre_employment.create_time, t_pre_employment.update_time,
        t_pre_employment.is_delete
    </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_pre_employment
    where employment_id = #{employmentId,jdbcType=INTEGER}  AND  is_delete = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_pre_employment
    where employment_id = #{employmentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="employment_id" keyProperty="employmentId" parameterType="com.qinjee.masterdata.model.entity.PreEmployment" useGeneratedKeys="true">
     INSERT INTO t_pre_employment (
            employment_id, user_name, phone, gender, email, id_type,
            id_number, age, first_work_date, marital_status, highest_degree, graduated_school,
            graduated_speciality, last_work_company, is_give_birth, resident_character, height, blood_type,
            english_name, nationality, birth_date, political_status, birthplace, application_position,
            probation_period, hire_date, org_id, post_id, employment_state, employment_register,
            description, data_source, company_id, operator_id, is_delete

        ) VALUES (
            #{employmentId},
            #{userName},
            #{phone},
            #{gender},
            #{email},
            #{idType},
            #{idNumber},
            #{age},
            #{firstWorkDate},
            #{maritalStatus},
            #{highestDegree},
            #{graduatedSchool},
            #{graduatedSpeciality},
            #{lastWorkCompany},
            #{isGiveBirth},
            #{residentCharacter},
            #{height},
            #{bloodType},
            #{englishName},
            #{nationality},
            #{birthDate},
            #{politicalStatus},
            #{birthplace},
            #{applicationPosition},
            #{probationPeriod},
            #{hireDate},
            #{orgId},
            #{postId},
            #{employmentState},
            #{employmentRegister},
            #{description},
            #{dataSource},
            #{companyId},
            #{operatorId},
            #{isDelete}
        )
  </insert>
  <!-- 根据条件查询数据 -->
<!--  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="map">-->
<!--    SELECT-->
<!--    <include refid="Base_Column_List" />-->
<!--    FROM t_pre_employment t_pre_employment WHERE 1 = 1-->
<!--    <if test="user_name != null and user_name != ''">-->
<!--      AND t_pre_employment.user_name LIKE CONCAT('%',#{user_name},'%')-->
<!--    </if>-->
<!--    <if test="phone != null and phone != ''">-->
<!--      AND t_pre_employment.phone LIKE CONCAT('%',#{phone},'%')-->
<!--    </if>-->
<!--    <if test="gender != null and gender != ''">-->
<!--      AND t_pre_employment.gender LIKE CONCAT('%',#{gender},'%')-->
<!--    </if>-->
<!--    <if test="email != null and email != ''">-->
<!--      AND t_pre_employment.email LIKE CONCAT('%',#{email},'%')-->
<!--    </if>-->
<!--    <if test="id_type != null and id_type != ''">-->
<!--      AND t_pre_employment.id_type LIKE CONCAT('%',#{id_type},'%')-->
<!--    </if>-->
<!--    <if test="id_number != null and id_number != ''">-->
<!--      AND t_pre_employment.id_number LIKE CONCAT('%',#{id_number},'%')-->
<!--    </if>-->
<!--    <if test="age != null">-->
<!--      AND t_pre_employment.age = #{age}-->
<!--    </if>-->
<!--    <if test="first_work_date != null">-->
<!--      AND t_pre_employment.first_work_date = #{first_work_date}-->
<!--    </if>-->
<!--    <if test="marital_status != null and marital_status != ''">-->
<!--      AND t_pre_employment.marital_status LIKE CONCAT('%',#{marital_status},'%')-->
<!--    </if>-->
<!--    <if test="highest_degree != null and highest_degree != ''">-->
<!--      AND t_pre_employment.highest_degree LIKE CONCAT('%',#{highest_degree},'%')-->
<!--    </if>-->
<!--    <if test="graduated_school != null and graduated_school != ''">-->
<!--      AND t_pre_employment.graduated_school LIKE CONCAT('%',#{graduated_school},'%')-->
<!--    </if>-->
<!--    <if test="graduated_speciality != null and graduated_speciality != ''">-->
<!--      AND t_pre_employment.graduated_speciality LIKE CONCAT('%',#{graduated_speciality},'%')-->
<!--    </if>-->
<!--    <if test="last_work_company != null and last_work_company != ''">-->
<!--      AND t_pre_employment.last_work_company LIKE CONCAT('%',#{last_work_company},'%')-->
<!--    </if>-->
<!--    <if test="is_give_birth != null">-->
<!--      AND t_pre_employment.is_give_birth = #{is_give_birth}-->
<!--    </if>-->
<!--    <if test="resident_character != null and resident_character != ''">-->
<!--      AND t_pre_employment.resident_character LIKE CONCAT('%',#{resident_character},'%')-->
<!--    </if>-->
<!--    <if test="height != null">-->
<!--      AND t_pre_employment.height = #{height}-->
<!--    </if>-->
<!--    <if test="blood_type != null and blood_type != ''">-->
<!--      AND t_pre_employment.blood_type LIKE CONCAT('%',#{blood_type},'%')-->
<!--    </if>-->
<!--    <if test="english_name != null and english_name != ''">-->
<!--      AND t_pre_employment.english_name LIKE CONCAT('%',#{english_name},'%')-->
<!--    </if>-->
<!--    <if test="nationality != null">-->
<!--      AND t_pre_employment.nationality = #{nationality}-->
<!--    </if>-->
<!--    <if test="birth_date != null">-->
<!--      AND t_pre_employment.birth_date = #{birth_date}-->
<!--    </if>-->
<!--    <if test="political_status != null">-->
<!--      AND t_pre_employment.political_status = #{political_status}-->
<!--    </if>-->
<!--    <if test="birthplace != null and birthplace != ''">-->
<!--      AND t_pre_employment.birthplace LIKE CONCAT('%',#{birthplace},'%')-->
<!--    </if>-->
<!--    <if test="application_position != null and application_position != ''">-->
<!--      AND t_pre_employment.application_position LIKE CONCAT('%',#{application_position},'%')-->
<!--    </if>-->
<!--    <if test="probation_period != null">-->
<!--      AND t_pre_employment.probation_period = #{probation_period}-->
<!--    </if>-->
<!--    <if test="hire_date != null">-->
<!--      AND t_pre_employment.hire_date = #{hire_date}-->
<!--    </if>-->
<!--    <if test="org_id != null">-->
<!--      AND t_pre_employment.org_id = #{org_id}-->
<!--    </if>-->
<!--    <if test="post_id != null">-->
<!--      AND t_pre_employment.post_id = #{post_id}-->
<!--    </if>-->
<!--    <if test="employment_state != null and employment_state != ''">-->
<!--      AND t_pre_employment.employment_state LIKE CONCAT('%',#{employment_state},'%')-->
<!--    </if>-->
<!--    <if test="employment_register != null and employment_register != ''">-->
<!--      AND t_pre_employment.employment_register LIKE CONCAT('%',#{employment_register},'%')-->
<!--    </if>-->
<!--    <if test="description != null and description != ''">-->
<!--      AND t_pre_employment.description LIKE CONCAT('%',#{description},'%')-->
<!--    </if>-->
<!--    <if test="data_source != null and data_source != ''">-->
<!--      AND t_pre_employment.data_source LIKE CONCAT('%',#{data_source},'%')-->
<!--    </if>-->
<!--    <if test="company_id != null">-->
<!--      AND t_pre_employment.company_id = #{company_id}-->
<!--    </if>-->
<!--    <if test="operator_id != null">-->
<!--      AND t_pre_employment.operator_id = #{operator_id}-->
<!--    </if>-->
<!--    <if test="create_time != null">-->
<!--      AND t_pre_employment.create_time = #{create_time}-->
<!--    </if>-->
<!--    <if test="update_time != null">-->
<!--      AND t_pre_employment.update_time = #{update_time}-->
<!--    </if>-->
<!--    <if test="is_delete != null">-->
<!--      AND t_pre_employment.is_delete = #{is_delete}-->
<!--    </if>-->
<!--  </select>-->
  <!-- 批量插入数据 -->
<!--  <insert id="insertT_pre_employments" parameterType="list">-->
<!--    INSERT INTO t_pre_employment (-->
<!--    employment_id, user_name, phone, gender, email, id_type,-->
<!--    id_number, age, first_work_date, marital_status, highest_degree, graduated_school,-->
<!--    graduated_speciality, last_work_company, is_give_birth, resident_character, height, blood_type,-->
<!--    english_name, nationality, birth_date, political_status, birthplace, application_position,-->
<!--    probation_period, hire_date, org_id, post_id, employment_state, employment_register,-->
<!--    description, data_source, company_id, operator_id, create_time, update_time,-->
<!--    is_delete-->
<!--    ) VALUES (-->
<!--    <foreach collection="list" index="index" item="item" separator=",">-->
<!--      (-->
<!--      #{item.employment_id},-->
<!--      #{item.user_name},-->
<!--      #{item.phone},-->
<!--      #{item.gender},-->
<!--      #{item.email},-->
<!--      #{item.id_type},-->
<!--      #{item.id_number},-->
<!--      #{item.age},-->
<!--      #{item.first_work_date},-->
<!--      #{item.marital_status},-->
<!--      #{item.highest_degree},-->
<!--      #{item.graduated_school},-->
<!--      #{item.graduated_speciality},-->
<!--      #{item.last_work_company},-->
<!--      #{item.is_give_birth},-->
<!--      #{item.resident_character},-->
<!--      #{item.height},-->
<!--      #{item.blood_type},-->
<!--      #{item.english_name},-->
<!--      #{item.nationality},-->
<!--      #{item.birth_date},-->
<!--      #{item.political_status},-->
<!--      #{item.birthplace},-->
<!--      #{item.application_position},-->
<!--      #{item.probation_period},-->
<!--      #{item.hire_date},-->
<!--      #{item.org_id},-->
<!--      #{item.post_id},-->
<!--      #{item.employment_state},-->
<!--      #{item.employment_register},-->
<!--      #{item.description},-->
<!--      #{item.data_source},-->
<!--      #{item.company_id},-->
<!--      #{item.operator_id},-->
<!--      #{item.create_time},-->
<!--      #{item.update_time},-->
<!--      #{item.is_delete}-->
<!--      )-->
<!--    </foreach>-->
<!--  </insert>-->
  <!-- 修改数据 -->
  <update id="updateByPrimaryKey" parameterType="com.qinjee.masterdata.model.entity.PreEmployment" >
        UPDATE t_pre_employment SET
            user_name = #{userName},
            phone = #{phone},
            gender = #{gender},
            email = #{email},
            id_type = #{idType},
            id_number = #{idNumber},
            age = #{age},
            first_work_date = #{firstWorkDate},
            marital_status = #{maritalStatus},
            highest_degree = #{highestDegree},
            graduated_school = #{graduatedSchool},
            graduated_speciality = #{graduatedSpeciality},
            last_work_company = #{lastWorkCompany},
            is_give_birth = #{isGiveBirth},
            resident_character = #{residentCharacter},
            height = #{height},
            blood_type = #{bloodType},
            english_name = #{englishName},
            nationality = #{nationality},
            birth_date = #{birthDate},
            political_status = #{politicalStatus},
            birthplace = #{birthplace},
            application_position = #{applicationPosition},
            probation_period = #{probationPeriod},
            hire_date = #{hireDate},
            org_id = #{orgId},
            post_id = #{postId},
            employment_state = #{employmentState},
            employment_register = #{employmentRegister},
            description = #{description},
            data_source = #{dataSource},
            operator_id = #{item.operatorId},
            is_delete = #{item.isDelete}
        WHERE employment_id = #{employmentId}
    </update>

<!--  &lt;!&ndash; 批量修改数据 &ndash;&gt;-->
<!--  <update id="updatebatch" parameterType="list">-->
<!--    <foreach collection="list" index="index" item="item" separator=";">-->
<!--      UPDATE t_pre_employment SET-->
<!--      user_name = #{item.user_name},-->
<!--      phone = #{item.phone},-->
<!--      gender = #{item.gender},-->
<!--      email = #{item.email},-->
<!--      id_type = #{item.id_type},-->
<!--      id_number = #{item.id_number},-->
<!--      age = #{item.age},-->
<!--      first_work_date = #{item.first_work_date},-->
<!--      marital_status = #{item.marital_status},-->
<!--      highest_degree = #{item.highest_degree},-->
<!--      graduated_school = #{item.graduated_school},-->
<!--      graduated_speciality = #{item.graduated_speciality},-->
<!--      last_work_company = #{item.last_work_company},-->
<!--      is_give_birth = #{item.is_give_birth},-->
<!--      resident_character = #{item.resident_character},-->
<!--      height = #{item.height},-->
<!--      blood_type = #{item.blood_type},-->
<!--      english_name = #{item.english_name},-->
<!--      nationality = #{item.nationality},-->
<!--      birth_date = #{item.birth_date},-->
<!--      political_status = #{item.political_status},-->
<!--      birthplace = #{item.birthplace},-->
<!--      application_position = #{item.application_position},-->
<!--      probation_period = #{item.probation_period},-->
<!--      hire_date = #{item.hire_date},-->
<!--      org_id = #{item.org_id},-->
<!--      post_id = #{item.post_id},-->
<!--      employment_state = #{item.employment_state},-->
<!--      employment_register = #{item.employment_register},-->
<!--      description = #{item.description},-->
<!--      data_source = #{item.data_source},-->
<!--      company_id = #{item.company_id},-->
<!--      operator_id = #{item.operator_id},-->
<!--      create_time = #{item.create_time},-->
<!--      update_time = #{item.update_time},-->
<!--      is_delete = #{item.is_delete}-->
<!--      WHERE employment_id = #{item.employment_id}-->
<!--    </foreach>-->
<!--  </update>-->
  <select id="selectMaxId" resultType="java.lang.Integer">
    select MAX(employment_id)
    from t_pre_employment
     WHERE  is_delete = 0
  </select>
  <select id="getPhoneNumber" resultType="java.lang.String">
    select phone
    from t_pre_employment
    where employment_id
    in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    and is_delete=0
  </select>
  <select id="getMail" resultType="java.lang.String" >
    select email
    from t_pre_employment
    where  is_delete = 0
    AND
    employment_id in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>
  <select id="selectPreEmployment" resultType="com.qinjee.masterdata.model.entity.PreEmployment" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_pre_employment
    where  company_id = #{companyId,jdbcType=INTEGER}
    AND
    is_delete =0
  </select>
  <update id="deletePreEmployment">
    update  t_pre_employment
    set
    is_delete=1
    where employment_id = #{employmentId,jdbcType=INTEGER}
  </update>

  <update id="deletePreEmploymentList">
    update  t_pre_employment
    set
    is_delete=1
    where employment_id  in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
  <select id="selectIdByNumber" resultType="java.lang.Integer">
    select employment_id
    from  t_pre_employment
    where   phone = #{phone,jdbcType=VARCHAR}
    AND is_delete = 0
  </select>
    <select id="selectIdByComId" resultType="java.lang.Integer">
       select employment_id
    from  t_pre_employment
    where
    company_id = #{companyId,jdbcType=INTEGER}
    AND is_delete = 0
    </select>
  <select id="selectByPrimaryKeyList" resultType="com.qinjee.masterdata.model.entity.PreEmployment" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_pre_employment
    where employment_id
    in <foreach collection="list" item="item" open="(" separator="," close=")">
    #{item}
  </foreach>
    AND  is_delete = 0
  </select>
    <select id="selectExportPreList" resultType="hashmap">
        select pre.employment_id,pre.user_name,pre.phone,pre.gender,pre.email,pre.id_type,pre.id_number,pre.age,pre.first_work_date,pre.highest_degree,
        pre.graduated_school,pre.graduated_speciality,pre.last_work_company,pre.probation_period,pre.hire_date,org.org_code,post.post_code,
        pre.description,org.org_name as org_name,post.post_name as post_name,pre.application_position
        from t_pre_employment pre
        left join t_organization org on org.org_id = pre.org_id
        left join t_post post on pre.post_id = post.post_id
        where  employment_id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND pre.is_delete=0 and org.is_enable=1 and post.is_delete=0
    </select>
</mapper>