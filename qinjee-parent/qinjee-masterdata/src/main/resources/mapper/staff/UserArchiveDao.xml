<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qinjee.masterdata.dao.staffdao.userarchivedao.UserArchiveDao">
  <resultMap id="BaseResultMap" type="com.qinjee.masterdata.model.entity.UserArchive">
    <id column="archive_id" jdbcType="INTEGER" property="archiveId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="employee_number" jdbcType="VARCHAR" property="employeeNumber" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="user_category" jdbcType="VARCHAR" property="userCategory" />
    <result column="business_unit_id" jdbcType="INTEGER" property="businessUnitId" />
    <result column="org_id" jdbcType="INTEGER" property="orgId" />
    <result column="post_id" jdbcType="INTEGER" property="postId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="org_name" jdbcType="VARCHAR" property="orgName" />
    <result column="businessUnitName" jdbcType="VARCHAR" property="businessUnitName" />
    <result column="post_name" jdbcType="VARCHAR" property="postName" />
    <result column="id_type" jdbcType="VARCHAR" property="idType" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="birth_date" jdbcType="DATE" property="birthDate" />
    <result column="age" jdbcType="SMALLINT" property="age" />
    <result column="nationality" jdbcType="INTEGER" property="nationality" />
    <result column="birthplace" jdbcType="VARCHAR" property="birthplace" />
    <result column="political_status" jdbcType="INTEGER" property="politicalStatus" />
    <result column="marital_status" jdbcType="VARCHAR" property="maritalStatus" />
    <result column="first_work_date" jdbcType="DATE" property="firstWorkDate" />
    <result column="hire_date" jdbcType="DATE" property="hireDate" />
    <result column="serving_age" jdbcType="DECIMAL" property="servingAge" />
    <result column="working_period" jdbcType="DECIMAL" property="workingPeriod" />
    <result column="probation_due_date" jdbcType="DATE" property="probationDueDate" />
    <result column="probation_period" jdbcType="INTEGER" property="probationPeriod" />
    <result column="converse_date" jdbcType="DATE" property="converseDate" />
    <result column="first_degree" jdbcType="VARCHAR" property="firstDegree" />
    <result column="highest_degree" jdbcType="VARCHAR" property="highestDegree" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="professional_certification" jdbcType="VARCHAR" property="professionalCertification" />
    <result column="professional_title" jdbcType="VARCHAR" property="professionalTitle" />
    <result column="professional_level" jdbcType="VARCHAR" property="professionalLevel" />
    <result column="attrition_date" jdbcType="DATE" property="attritionDate" />
    <result column="attrition_type" jdbcType="VARCHAR" property="attritionType" />
    <result column="supervisor_id" jdbcType="INTEGER" property="supervisorId" />
    <result column="operator_id" jdbcType="INTEGER" property="operatorId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="supervisor_user_name" jdbcType="VARCHAR" property="supervisorUserName" />
  </resultMap>
  <resultMap id="downloadVo" type="com.qinjee.masterdata.model.vo.staff.export.ExportArcVo">
    <id column="archive_id" jdbcType="INTEGER" property="archive_id" />
    <result column="employee_number" jdbcType="VARCHAR" property="employee_number" />
    <result column="org_name" jdbcType="VARCHAR" property="org_name" />
    <result column="hire_date" jdbcType="TIMESTAMP" property="hire_date" />
    <result column="post_name" jdbcType="VARCHAR" property="post_name" />
    <result column="user_name" jdbcType="VARCHAR" property="user_name" />
    <result column="business_unit_name" jdbcType="VARCHAR" property="business_unit_name" />
    <result column="probation_due_date" jdbcType="TIMESTAMP" property="probation_due_date" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="supervisor_user_name" jdbcType="VARCHAR" property="supervisor_user_name" />
    <result column="employment_type" jdbcType="VARCHAR" property="employment_type" />
  </resultMap>

  <sql id="Base_Column_List">
    archive_id, user_id, employee_number, company_id, user_category, business_unit_id, org_id, post_id,
    user_name, id_type, id_number, gender, birth_date, age, nationality, birthplace, political_status,
    marital_status, first_work_date, hire_date, serving_age, working_period, probation_due_date,
    probation_period, converse_date, first_degree, highest_degree, phone, email, address,
    professional_certification, professional_title, professional_level, attrition_date,
    attrition_type, supervisor_id, operator_id, create_time, update_time,is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user_archive
    where archive_id = #{archiveId,jdbcType=INTEGER} AND is_delete=0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user_archive
    where archive_id = #{archiveId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="archive_id" keyProperty="archiveId" parameterType="com.qinjee.masterdata.model.entity.UserArchive" useGeneratedKeys="true">
    insert into t_user_archive (user_id, employee_number, company_id,
      user_category, business_unit_id, user_name,
      id_type, id_number, gender,
      birth_date, age, nationality,
      birthplace, political_status, marital_status,
      first_work_date, hire_date, serving_age,
      working_period, probation_due_date, probation_period,
      converse_date, first_degree, highest_degree,
      phone, email, address,
      professional_certification, professional_title,
      professional_level, attrition_date, attrition_type,
      operator_id, create_time, update_time,is_delete
      )
    values (#{userId,jdbcType=INTEGER}, #{employeeNumber,jdbcType=VARCHAR}, #{companyId,jdbcType=INTEGER},
      #{userCategory,jdbcType=VARCHAR}, #{businessUnitId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
      #{idType,jdbcType=VARCHAR}, #{idNumber,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR},
      #{birthDate,jdbcType=DATE}, #{age,jdbcType=SMALLINT}, #{nationality,jdbcType=INTEGER},
      #{birthplace,jdbcType=VARCHAR}, #{politicalStatus,jdbcType=INTEGER}, #{maritalStatus,jdbcType=VARCHAR},
      #{firstWorkDate,jdbcType=DATE}, #{hireDate,jdbcType=DATE}, #{servingAge,jdbcType=DECIMAL},
      #{workingPeriod,jdbcType=DECIMAL}, #{probationDueDate,jdbcType=DATE}, #{probationPeriod,jdbcType=INTEGER},
      #{converseDate,jdbcType=DATE}, #{firstDegree,jdbcType=VARCHAR}, #{highestDegree,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
      #{professionalCertification,jdbcType=VARCHAR}, #{professionalTitle,jdbcType=VARCHAR},
      #{professionalLevel,jdbcType=VARCHAR}, #{attritionDate,jdbcType=DATE}, #{attritionType,jdbcType=VARCHAR},
      #{operatorId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{isDelete,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" keyColumn="archive_id" keyProperty="archiveId"
          parameterType="com.qinjee.masterdata.model.entity.UserArchive" useGeneratedKeys="true">
    insert into t_user_archive
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeNumber != null">
        employee_number,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="userCategory != null">
        user_category,
      </if>
      <if test="businessUnitId != null">
        business_unit_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="idType != null">
        id_type,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthDate != null">
        birth_date,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="nationality != null">
        nationality,
      </if>
      <if test="birthplace != null">
        birthplace,
      </if>
      <if test="politicalStatus != null">
        political_status,
      </if>
      <if test="maritalStatus != null">
        marital_status,
      </if>
      <if test="firstWorkDate != null">
        first_work_date,
      </if>
      <if test="hireDate != null">
        hire_date,
      </if>
      <if test="servingAge != null">
        serving_age,
      </if>
      <if test="workingPeriod != null">
        working_period,
      </if>
      <if test="probationDueDate != null">
        probation_due_date,
      </if>
      <if test="probationPeriod != null">
        probation_period,
      </if>
      <if test="converseDate != null">
        converse_date,
      </if>
      <if test="firstDegree != null">
        first_degree,
      </if>
      <if test="highestDegree != null">
        highest_degree,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="professionalCertification != null">
        professional_certification,
      </if>
      <if test="professionalTitle != null">
        professional_title,
      </if>
      <if test="professionalLevel != null">
        professional_level,
      </if>
      <if test="attritionDate != null">
        attrition_date,
      </if>
      <if test="attritionType != null">
        attrition_type,
      </if>
      <if test="operatorId != null">
        operator_id
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeNumber != null">
        #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
       #{userId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="userCategory != null">
        #{userCategory,jdbcType=VARCHAR},
      </if>
      <if test="businessUnitId != null">
        #{businessUnitId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="idType != null">
        #{idType,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        #{birthDate,jdbcType=DATE},
      </if>
      <if test="age != null">
        #{age,jdbcType=SMALLINT},
      </if>
      <if test="nationality != null">
        #{nationality,jdbcType=INTEGER},
      </if>
      <if test="birthplace != null">
        #{birthplace,jdbcType=VARCHAR},
      </if>
      <if test="politicalStatus != null">
        #{politicalStatus,jdbcType=INTEGER},
      </if>
      <if test="maritalStatus != null">
        #{maritalStatus,jdbcType=VARCHAR},
      </if>
      <if test="firstWorkDate != null">
        #{firstWorkDate,jdbcType=DATE},
      </if>
      <if test="hireDate != null">
        #{hireDate,jdbcType=DATE},
      </if>
      <if test="servingAge != null">
        #{servingAge,jdbcType=DECIMAL},
      </if>
      <if test="workingPeriod != null">
        #{workingPeriod,jdbcType=DECIMAL},
      </if>
      <if test="probationDueDate != null">
        #{probationDueDate,jdbcType=DATE},
      </if>
      <if test="probationPeriod != null">
        #{probationPeriod,jdbcType=INTEGER},
      </if>
      <if test="converseDate != null">
        #{converseDate,jdbcType=DATE},
      </if>
      <if test="firstDegree != null">
        #{firstDegree,jdbcType=VARCHAR},
      </if>
      <if test="highestDegree != null">
        #{highestDegree,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="professionalCertification != null">
        #{professionalCertification,jdbcType=VARCHAR},
      </if>
      <if test="professionalTitle != null">
        #{professionalTitle,jdbcType=VARCHAR},
      </if>
      <if test="professionalLevel != null">
        #{professionalLevel,jdbcType=VARCHAR},
      </if>
      <if test="attritionDate != null">
        #{attritionDate,jdbcType=DATE},
      </if>
      <if test="attritionType != null">
        #{attritionType,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" keyColumn="archive_id" keyProperty="archiveId" parameterType="com.qinjee.masterdata.model.entity.UserArchive" useGeneratedKeys="true">
    <foreach collection="userArchives" item="item" open="(" separator="," close=")">
      insert into t_user_archive
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="employeeNumber != null">
          employee_number,
        </if>
        <if test="userId != null">
          user_id,
        </if>
        <if test="companyId != null">
          company_id,
        </if>
        <if test="userCategory != null">
          user_category,
        </if>
        <if test="businessUnitId != null">
          business_unit_id,
        </if>
        <if test="userName != null">
          user_name,
        </if>
        <if test="idType != null">
          id_type,
        </if>
        <if test="idNumber != null">
          id_number,
        </if>
        <if test="gender != null">
          gender,
        </if>
        <if test="birthDate != null">
          birth_date,
        </if>
        <if test="age != null">
          age,
        </if>
        <if test="nationality != null">
          nationality,
        </if>
        <if test="birthplace != null">
          birthplace,
        </if>
        <if test="politicalStatus != null">
          political_status,
        </if>
        <if test="maritalStatus != null">
          marital_status,
        </if>
        <if test="firstWorkDate != null">
          first_work_date,
        </if>
        <if test="hireDate != null">
          hire_date,
        </if>
        <if test="servingAge != null">
          serving_age,
        </if>
        <if test="workingPeriod != null">
          working_period,
        </if>
        <if test="probationDueDate != null">
          probation_due_date,
        </if>
        <if test="probationPeriod != null">
          probation_period,
        </if>
        <if test="converseDate != null">
          converse_date,
        </if>
        <if test="firstDegree != null">
          first_degree,
        </if>
        <if test="highestDegree != null">
          highest_degree,
        </if>
        <if test="phone != null">
          phone,
        </if>
        <if test="email != null">
          email,
        </if>
        <if test="address != null">
          address,
        </if>
        <if test="professionalCertification != null">
          professional_certification,
        </if>
        <if test="professionalTitle != null">
          professional_title,
        </if>
        <if test="professionalLevel != null">
          professional_level,
        </if>
        <if test="attritionDate != null">
          attrition_date,
        </if>
        <if test="attritionType != null">
          attrition_type,
        </if>
        <if test="operatorId != null">
          operator_id
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="employeeNumber != null">
          #{item.employeeNumber,jdbcType=VARCHAR},
        </if>
        <if test="userId != null">
          #{item.userId,jdbcType=INTEGER},
        </if>
        <if test="companyId != null">
          #{item.companyId,jdbcType=INTEGER},
        </if>
        <if test="userCategory != null">
          #{item.userCategory,jdbcType=VARCHAR},
        </if>
        <if test="businessUnitId != null">
          #{item.businessUnitId,jdbcType=INTEGER},
        </if>
        <if test="userName != null">
          #{item.userName,jdbcType=VARCHAR},
        </if>
        <if test="idType != null">
          #{item.idType,jdbcType=VARCHAR},
        </if>
        <if test="idNumber != null">
          #{item.idNumber,jdbcType=VARCHAR},
        </if>
        <if test="gender != null">
          #{item.gender,jdbcType=VARCHAR},
        </if>
        <if test="birthDate != null">
          #{item.birthDate,jdbcType=DATE},
        </if>
        <if test="age != null">
          #{item.age,jdbcType=SMALLINT},
        </if>
        <if test="nationality != null">
          #{item.nationality,jdbcType=INTEGER},
        </if>
        <if test="birthplace != null">
          #{item.birthplace,jdbcType=VARCHAR},
        </if>
        <if test="politicalStatus != null">
          #{item.politicalStatus,jdbcType=INTEGER},
        </if>
        <if test="maritalStatus != null">
          #{item.maritalStatus,jdbcType=VARCHAR},
        </if>
        <if test="firstWorkDate != null">
          #{item.firstWorkDate,jdbcType=DATE},
        </if>
        <if test="hireDate != null">
          #{item.hireDate,jdbcType=DATE},
        </if>
        <if test="servingAge != null">
          #{item.servingAge,jdbcType=DECIMAL},
        </if>
        <if test="workingPeriod != null">
          #{item.workingPeriod,jdbcType=DECIMAL},
        </if>
        <if test="probationDueDate != null">
          #{item.probationDueDate,jdbcType=DATE},
        </if>
        <if test="probationPeriod != null">
          #{item.probationPeriod,jdbcType=INTEGER},
        </if>
        <if test="converseDate != null">
          #{item.converseDate,jdbcType=DATE},
        </if>
        <if test="firstDegree != null">
          #{item.firstDegree,jdbcType=VARCHAR},
        </if>
        <if test="highestDegree != null">
          #{item.highestDegree,jdbcType=VARCHAR},
        </if>
        <if test="phone != null">
          #{item.phone,jdbcType=VARCHAR},
        </if>
        <if test="email != null">
          #{item.email,jdbcType=VARCHAR},
        </if>
        <if test="address != null">
          #{item.address,jdbcType=VARCHAR},
        </if>
        <if test="professionalCertification != null">
          #{item.professionalCertification,jdbcType=VARCHAR},
        </if>
        <if test="professionalTitle != null">
          #{item.professionalTitle,jdbcType=VARCHAR},
        </if>
        <if test="professionalLevel != null">
          #{item.professionalLevel,jdbcType=VARCHAR},
        </if>
        <if test="attritionDate != null">
          #{item.attritionDate,jdbcType=DATE},
        </if>
        <if test="attritionType != null">
          #{item.attritionType,jdbcType=VARCHAR},
        </if>
        <if test="operatorId != null">
          #{item.operatorId,jdbcType=INTEGER}
        </if>
      </trim>
    </foreach>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qinjee.masterdata.model.entity.UserArchive">
    update t_user_archive
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="employeeNumber != null">
        employee_number = #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="userCategory != null">
        user_category = #{userCategory,jdbcType=VARCHAR},
      </if>
      <if test="businessUnitId != null">
        business_unit_id = #{businessUnitId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="idType != null">
        id_type = #{idType,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birth_date != null">
        birth_date = #{birthDate,jdbcType=DATE},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=SMALLINT},
      </if>
      <if test="nationality != null">
        nationality = #{nationality,jdbcType=INTEGER},
      </if>
      <if test="birthplace != null">
        birthplace = #{birthplace,jdbcType=VARCHAR},
      </if>
      <if test="politicalStatus != null">
        political_status = #{politicalStatus,jdbcType=INTEGER},
      </if>
      <if test="maritalStatus != null">
        marital_status = #{maritalStatus,jdbcType=VARCHAR},
      </if>
      <if test="firstWorkDate != null">
        first_work_date = #{firstWorkDate,jdbcType=DATE},
      </if>
      <if test="hire_date != null">
        hire_date = #{hireDate,jdbcType=DATE},
      </if>
      <if test="servingAge != null">
        serving_age = #{servingAge,jdbcType=DECIMAL},
      </if>
      <if test="workingPeriod != null">
        working_period = #{workingPeriod,jdbcType=DECIMAL},
      </if>
      <if test="probationDueDate != null">
        probation_due_date = #{probationDueDate,jdbcType=DATE},
      </if>
      <if test="probationPeriod != null">
        probation_period = #{probationPeriod,jdbcType=INTEGER},
      </if>
      <if test="converseDate != null">
        converse_date = #{converseDate,jdbcType=DATE},
      </if>
      <if test="firstDegree != null">
        first_degree = #{firstDegree,jdbcType=VARCHAR},
      </if>
      <if test="highestDegree != null">
        highest_degree = #{highestDegree,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="professionalCertification != null">
        professional_certification = #{professionalCertification,jdbcType=VARCHAR},
      </if>
      <if test="professionalTitle != null">
        professional_title = #{professionalTitle,jdbcType=VARCHAR},
      </if>
      <if test="professionalLevel != null">
        professional_level = #{professionalLevel,jdbcType=VARCHAR},
      </if>
      <if test="attritionDate != null">
        attrition_date = #{attritionDate,jdbcType=DATE},
      </if>
      <if test="attritionType != null">
        attrition_type = #{attritionType,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where archive_id = #{archiveId,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.qinjee.masterdata.model.entity.UserArchive">
    update t_user_archive
    set user_id = #{userId,jdbcType=INTEGER},
      employee_number = #{employeeNumber,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=INTEGER},
      user_category = #{userCategory,jdbcType=VARCHAR},
      business_unit_id = #{businessUnitId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      id_type = #{idType,jdbcType=VARCHAR},
      id_number = #{idNumber,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      birth_date = #{birthDate,jdbcType=DATE},
      age = #{age,jdbcType=SMALLINT},
      nationality = #{nationality,jdbcType=INTEGER},
      birthplace = #{birthplace,jdbcType=VARCHAR},
      political_status = #{politicalStatus,jdbcType=INTEGER},
      marital_status = #{maritalStatus,jdbcType=VARCHAR},
      first_work_date = #{firstWorkDate,jdbcType=DATE},
      hire_date = #{hireDate,jdbcType=DATE},
      serving_age = #{servingAge,jdbcType=DECIMAL},
      working_period = #{workingPeriod,jdbcType=DECIMAL},
      probation_due_date = #{probationDueDate,jdbcType=DATE},
      probation_period = #{probationPeriod,jdbcType=INTEGER},
      converse_date = #{converseDate,jdbcType=DATE},
      first_degree = #{firstDegree,jdbcType=VARCHAR},
      highest_degree = #{highestDegree,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      professional_certification = #{professionalCertification,jdbcType=VARCHAR},
      professional_title = #{professionalTitle,jdbcType=VARCHAR},
      professional_level = #{professionalLevel,jdbcType=VARCHAR},
      attrition_date = #{attritionDate,jdbcType=DATE},
      attrition_type = #{attritionType,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
      is_delete = #{isDelete,jdbcType=TINYINT}
    where archive_id = #{archiveId,jdbcType=INTEGER}
  </update>
  <select id="selectMaxId" resultType="java.lang.Integer">
    select MAX(archive_id)
    from t_user_archive
    where is_delete = 0
  </select>
  <select id="selectMail" resultType="java.lang.String">
    select  email
    from t_user_archive
    where  is_delete=0
    AND
     archive_id in
     <foreach collection="list" item="item" open="(" separator="," close=")">
       #{item}
     </foreach>
  </select>
  <select id="selectNotInList" resultType="com.qinjee.masterdata.model.entity.UserArchive" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user_archive
    where archive_id in
    <foreach collection="readyIdList" item="item" open="(" separator="," index=")">
    #{item}
    </foreach>
    AND is_delete=0
  </select>
  <update id="deleteArchiveByIdList">
    update t_user_archive
    set
    is_delete=1
    where  archive_id
    in
    <foreach collection="archiveid" item="item" open="(" separator="," close=")">
    #{item}
   </foreach>
  </update>
  <update id="resumeDeleteArchiveById" >
    update t_user_archive
    set
    is_delete=1
    where  archive_id = #{archiveId,jdbcType=INTEGER}
  </update>
  <select id="selectNameAndNumber" resultType="java.util.Map">
    select user_name,employee_number
    from   t_user_archive
    where is_delete=0
    AND archive_id=#{id,jdbcType=INTEGER}
  </select>
  <select id="selectArchiveIdByNumber" resultType="java.lang.Integer">
    select archive_id
    from   t_user_archive
    where is_delete=0
    AND  employee_number = #{employeeNumber,jdbcType=VARCHAR}
  </select>
  <select id="getUserArchiveListByOrgId" resultMap="BaseResultMap">
    select tua.archive_id, tua.user_id, tua.employee_number, tua.company_id, tua.user_category, tua.business_unit_id, tua.org_id, tua.post_id,
    tua.user_name, tua.id_type, tua.id_number, tua.gender, tua.birthdate, tua.age, tua.nationality, tua.birthplace, tua.political_status, tua.marital_status,
    tua.first_work_date, tua.hiredate, tua.serving_age, tua.working_period,tua.probation_due_date
    from t_user_archive tua left join t_organization torg on torg.org_id = tua.org_id
    where tua.is_delete = 0
  </select>
  <select id="getUserArchiveList" resultMap="BaseResultMap">
    SELECT tua.archive_id, tua.user_id, tua.employee_number, tua.company_id, tua.user_category, tua.business_unit_id, tua.org_id,
    tua.post_id, tua.user_name, tua.id_type, tua.id_number, tua.gender, tua.birth_date, tua.age, tua.nationality, tua.birthplace,
    tua.political_status, tua.marital_status, tua.first_work_date, tua.hire_date, tua.serving_age, tua.working_period,
    tua.probation_due_date, tua.probation_period, tua.converse_date, tua.first_degree, tua.highest_degree, tua.phone, tua.email,
    tua.address, tua.professional_certification, tua.professional_title, tua.professional_level, tua.attrition_date, tua.attrition_type,
    tua.increase_type, tua.archive_status, tua.supervisor_id,tua.operator_id, tua.create_time, tua.update_time, tua.is_delete, torg.org_name businessUnitName,
    dept.org_name orgName, tp.post_name postName, tua2.user_name supervisorUserName
    FROM t_user_archive tua
    LEFT JOIN t_post tp ON tua.post_id = tp.post_id
    LEFT JOIN t_user_archive tua2 ON tua.supervisor_id = tua2.archive_id
    LEFT JOIN t_organization torg ON torg.org_id = tua.business_unit_id
    LEFT JOIN t_organization dept ON dept.org_id = tua.org_id
    WHERE tua.is_delete = 0 AND tua2.is_delete = 0

    <if test="pageQueryVo != null">
        <if test="pageQueryVo.orgId != null">
          and tua.org_id =#{pageQueryVo.orgId}

        </if>
      <if test="pageQueryVo.querFieldVos != null and  pageQueryVo.querFieldVos.size > 0">
        <foreach collection="pageQueryVo.querFieldVos" item="querField">
            ${querField.condition}
        </foreach>
      </if>
    </if>
    <if test="sortFieldStr != null and sortFieldStr != ''">
      ORDER BY ${sortFieldStr}
    </if>
  </select>
<select id="selectByOrgId" resultType="java.lang.Integer">
  select archive_id
  from t_user_archive
  where org_id = #{orgId,jdbcType=INTEGER}

</select>
  <select id="selectArcNumberIn" resultType="java.lang.Integer">
    select count(1)
    from t_user_archive
    where user_category != "离职" AND company_id = #{id,jdbcType=INTEGER}
    AND  is_delete=0
  </select>

  <select id="selectByPrimaryKeyList" resultType="com.qinjee.masterdata.model.entity.UserArchive" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"  />
    from t_user_archive
    where
    archive_id in
    <foreach collection="achiveList" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <select id="selectArchiveIdByTel" resultType="java.lang.Integer">
    select archive_id
    from t_user_archive
    where #{tel,jdbcType=VARCHAR}
    AND is_delete=0
  </select>
  <select id="selectId" resultType="java.lang.Integer">
    select id
    from t_user_archive
    where id_type=#{idType,jdbcType=VARCHAR}
    AND id_number=#{idNumber,jdbcType=VARCHAR}
    AND user_category= "在职"
    AND is_delete=0
  </select>
  <select id="selectIdByComId" resultType="java.lang.Integer">
     select archive_id
    from t_user_archive
    where company_id = #{companyId,jdbcType=INTEGER}
    AND is_delete=0
  </select>
  <select id="selectStaff" resultType="java.lang.Integer">
    ${sql}
  </select>
  <select id="getUserArchiveListCustom" parameterType="String" resultType="hashmap">
        <if test="baseSql != null">
            ${baseSql}
        </if>
        <if test="order != null">
        order by ${order}
        </if>

  </select>
<select id="selectArchiveIdByOrgId" resultType="java.lang.Integer">
  select archive_id
    from t_user_archive
    where company_id=#{companyId}
  AND is_delete=0
</select>
  <select id="selectDownLoadVoList" resultType="com.qinjee.masterdata.model.vo.staff.export.ExportArcVo" resultMap="downloadVo">
    SELECT
    arc.archive_id,
    arc.user_name,
    arc.employee_number,
    orga.org_name AS business_unit_name,
    org.org_name,
    post.post_name,
    arc.hire_date,
    arc.probation_due_date,
    arch.user_name AS supervisor_user_name,
    arc.phone,
    relation.employment_type
    FROM
    t_user_archive arc
    LEFT JOIN t_organization org ON org.org_id = arc.org_id AND org.is_enable = 1
    LEFT JOIN t_organization orga ON orga.org_id = arc.business_unit_id AND orga.is_enable = 1
    LEFT JOIN t_post post ON arc.post_id = post.post_id AND post.is_delete = 0 AND post.is_enable = 1
    LEFT JOIN t_user_archive_post_relation relation ON arc.archive_id = relation.archive_id AND relation.is_delete = 0
    LEFT JOIN t_user_archive arch ON arc.supervisor_id = arch.archive_id AND arch.is_delete = 0
    WHERE
    arc.is_delete = 0
    and arc.archive_id in
    <foreach collection="archiveIdList" item="item" open="(" separator="," close=")">
    #{item}

 </foreach>
</select>
  <select id="selectEmployNumber" resultType="java.lang.String">
    select employee_number
    from  t_user_archive
    where  archive_id=#{businessId}
    and is_delete=0
  </select>
  <select id="selectDateByStatus" resultType="java.util.Date">
    select
    con.contract_end_date from
    t_labor_contract con
    left join  t_user_archive arc on arc.archive_id = con.archive_id
    where archive_status = #{string}
    and arc.is_delete=0
  </select>
  <select id="selectByOrgAndAuth" resultType="com.qinjee.masterdata.model.vo.staff.UserArchiveVo" resultMap="BaseResultMap">
    SELECT
    arc.archive_id, arc.user_id, arc.employee_number, arc.company_id, arc.user_category, arc.business_unit_id, arc.org_id, arc.post_id,
    arc.user_name, arc.id_type, arc.id_number, arc.gender, arc.birth_date, arc.age, arc.nationality, arc.birthplace, arc.political_status,
    arc.marital_status, arc.first_work_date, arc.hire_date, arc.serving_age, arc.working_period,arc. probation_due_date,
    arc.probation_period, arc.converse_date, arc.first_degree, arc.highest_degree, arc.phone, arc.email, arc.address,
    arc.professional_certification, arc.professional_title, arc.professional_level, arc.attrition_date,
    arc.attrition_type, arc.supervisor_id, arc.operator_id, arc.create_time, arc.update_time,arc.is_delete,
    orga.org_name ,
    post.post_name ,
    arch.user_name
    FROM
    t_user_archive arc
    LEFT JOIN t_organization orga ON orga.org_id = arc.org_id
    LEFT JOIN t_post post ON post.post_id = arc.post_id
    left join t_user_archive arch on arc.supervisor_id=arch.archive_id
    WHERE arc.is_delete = 0
    AND arch.is_delete = 0
    AND post.is_delete = 0
    AND orga.is_enable = 1
    and orga.company_id=#{companyId}
    and arc.org_id in(
    -- 查询人员机构权限
    select org_id from t_user_org_auth oa where oa.archive_id = 1-- 操作人档案ID
    and (oa.is_trusteeship = 0
    or (oa.trusteeship_begin_time <![CDATA[<]]> CURDATE()) and CURDATE() > oa.trusteeship_end_time
    )
    and oa.is_delete = 0

    -- 查询人员角色机构权限
    UNION
    select org_id from t_role_org_auth roa,t_user_role ur
    where roa.role_id = ur.role_id
    and ur.archive_id = #{archiveId} -- 操作人档案ID
    and (ur.is_trusteeship = 0
    or (ur.trusteeship_begin_time <![CDATA[<]]> CURDATE() and CURDATE() > ur.trusteeship_end_time)
    )
    and roa.is_delete = 0
    and ur.is_delete = 0
    and org_id=#{orgId}
    )
  </select>
  <select id="selectByOrgListAndAuth" resultType="com.qinjee.masterdata.model.vo.staff.UserArchiveVo">
    SELECT
    arc.user_name,
    arc.employee_number,
    org.org_name,
    post.post_name,
    arc.hire_date,
    arc.probation_due_date,
    arc.supervisor_id,
    arc.phone,
    arc.attrition_type
    FROM
    t_user_archive arc
    LEFT JOIN t_user_org_auth auth
    ON auth.archive_id = arc.archive_id
    LEFT JOIN t_organization org
    ON org.org_id = auth.org_id
    LEFT JOIN t_post post
    ON post.post_id = arc.post_id
    WHERE auth.archive_id = #{archiveId}
    AND auth.is_delete=0
    AND arc.is_delete = 0
    AND post.is_delete = 0
    AND org.is_enable = 1
    AND org.company_id = #{companyId}
    AND org.org_id IN
    <foreach collection="orgList" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <select id="countUserArchiveByOrgId" resultType="java.lang.Integer">
    SELECT COUNT(org_id) FROM t_user_archive WHERE org_id =#{orgId} AND is_delete =0

  </select>
  <select id="countUserArchiveByPostId" resultType="java.lang.Integer">
    SELECT COUNT(post_id) FROM t_user_archive WHERE post_id =#{postId} AND is_delete =0

  </select>

  <select id="selectIdByNumberAndEmploy" resultType="java.lang.Integer">
    select archive_id
    from t_user_archive
    where employee_number=#{employ}
    and id_number=#{number}
    and is_delete=0
  </select>
 <update id="deleteArchiveById">
   update t_user_archive
   set is_delete=1
   where archive_id=#{businessId}
 </update>
  <select id="selectBeforeFilter" resultType="com.qinjee.masterdata.model.entity.UserArchive" resultMap="BaseResultMap">
    select arc.*
    from t_user_archive arc
    left join t_user_archive_post_relation relation on relation.archive_id=arc.archive_id
    and relation.is_delete=0 and employment_type = #{type,jdbcType=VARCHAR}
    where arc.user_category=#{archiveType}
    and arc.is_delete=0


  </select>
  <select id="selectUserArchiveByName" resultType="com.qinjee.masterdata.model.entity.UserArchive">
    select  <include refid="Base_Column_List"/>
    from t_user_archive
    where user_name LIKE
    CONCAT(CONCAT('%', #{name}), '%')
    and is_delete=0
  </select>
  <select id="listUserArchiveByPostIds" resultMap="BaseResultMap">
    select  archive_id
    from t_user_archive
    where archive_status ='SERVICE' and is_delete =0 and post_id in
    <foreach collection="postIds" item="item" close=")" open="(" separator=",">

      #{item}
    </foreach>
  </select>
</mapper>

